{"version":3,"file":"static/js/316.83cbc69b.chunk.js","mappings":"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","sources":["components/shared/MarkdownRenderer.js","../node_modules/@mui/system/esm/styled/styled.js","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","../node_modules/@mui/icons-material/esm/Shuffle.js","../node_modules/@mui/icons-material/esm/ArrowBackIosNew.js","../node_modules/@mui/icons-material/esm/ArrowForwardIos.js","../node_modules/@mui/icons-material/esm/Flip.js","../node_modules/@mui/icons-material/esm/CheckCircle.js","components/flashcards/FlashcardItem.js","components/flashcards/FlashcardViewer.js","pages/FlashcardPage.js","hooks/useFlashcards.js","../node_modules/@mui/system/esm/useThemeProps/getThemeProps.js","utils/quizUtils.js"],"sourcesContent":["// src/components/shared/MarkdownRenderer.js\r\nimport React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkMath from 'remark-math';\r\nimport rehypeKatex from 'rehype-katex';\r\nimport { Typography, Link as MuiLink } from '@mui/material';\r\n\r\n// This component will render markdown text and correctly format LaTeX math blocks.\r\nfunction MarkdownRenderer({ text }) {\r\n    if (!text) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <ReactMarkdown\r\n            remarkPlugins={[remarkMath]}\r\n            rehypePlugins={[rehypeKatex]}\r\n            components={{\r\n                p: ({ node, ...props }) => <Typography variant=\"inherit\" component=\"div\" sx={{ mt: 1, mb: 1 }} {...props} />,\r\n                a: ({ node, ...props }) => <MuiLink {...props} />,\r\n                // Add more custom components for other markdown elements if needed\r\n            }}\r\n        >\r\n            {text}\r\n        </ReactMarkdown>\r\n    );\r\n}\r\n\r\nexport default MarkdownRenderer;","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","'use client';\n\nimport getThemeProps from \"./getThemeProps.js\";\nimport useTheme from \"../useTheme/index.js\";\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  return getThemeProps({\n    theme,\n    name,\n    props\n  });\n}","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10.59 9.17 5.41 4 4 5.41l5.17 5.17zM14.5 4l2.04 2.04L4 18.59 5.41 20 17.96 7.46 20 9.5V4zm.33 9.41-1.41 1.41 3.13 3.13L14.5 20H20v-5.5l-2.04 2.04z\"\n}), 'Shuffle');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z\"\n}), 'ArrowBackIosNew');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15 21h2v-2h-2zm4-12h2V7h-2zM3 5v14c0 1.1.9 2 2 2h4v-2H5V5h4V3H5c-1.1 0-2 .9-2 2m16-2v2h2c0-1.1-.9-2-2-2m-8 20h2V1h-2zm8-6h2v-2h-2zM15 5h2V3h-2zm4 8h2v-2h-2zm0 8c1.1 0 2-.9 2-2h-2z\"\n}), 'Flip');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckCircle');","// src/components/flashcards/FlashcardItem.js\nimport { useState } from 'react';\nimport { Paper, Typography, Box, useTheme, IconButton, List, ListItem, ListItemIcon, Divider, Chip } from '@mui/material';\nimport { alpha } from '@mui/material/styles';\nimport FlipIcon from '@mui/icons-material/Flip';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport MarkdownRenderer from '../shared/MarkdownRenderer'; // Ensure this import is correct\n\nfunction FlashcardItem({\n  frontText,\n  options,\n  correctOptionId,\n  explanation,\n  frontTitle = \"\",\n  backTitle = \"Correct Answer\",\n  accentColor\n}) {\n  const theme = useTheme();\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const effectiveAccentColor = accentColor || theme.palette.primary.main;\n\n  const handleFlip = (e) => {\n    if (e) e.stopPropagation();\n    setIsFlipped(!isFlipped);\n  };\n\n  const correctOptionObject = options?.find(opt => opt.id === correctOptionId);\n  const correctAnswerText = correctOptionObject ? `${correctOptionObject.id.toUpperCase()}. ${correctOptionObject.text}` : \"Answer not available\";\n\n  const cardMinHeight = '380px';\n\n  const cardFaceStyles = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    minHeight: cardMinHeight,\n    backfaceVisibility: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n    p: { xs: 2, sm: 3 },\n    overflowY: 'auto',\n    border: `2px solid ${effectiveAccentColor}`,\n    borderRadius: theme.shape.borderRadius,\n    boxSizing: 'border-box',\n  };\n\n  return (\n    <Box \n      onClick={() => setIsFlipped(!isFlipped)} \n      sx={{ \n        perspective: '1000px', \n        width: '100%', \n        minHeight: cardMinHeight,\n        cursor: 'pointer',\n        position: 'relative', \n      }}\n    >\n      <Box\n        sx={{\n          position: 'relative',\n          width: '100%',\n          height: '100%',\n          minHeight: cardMinHeight,\n          transition: 'transform 0.6s',\n          transformStyle: 'preserve-3d',\n          transform: isFlipped ? 'rotateY(180deg)' : 'rotateY(0deg)',\n        }}\n      >\n        {/* Front Face */}\n        <Paper\n          elevation={3}\n          sx={{ ...cardFaceStyles, justifyContent: 'flex-start', alignItems: 'flex-start', textAlign: 'left' }}\n        >\n          <Box sx={{display: 'flex', flexDirection: 'column', flexGrow: 1, width: '100%'}}>\n            <Typography variant=\"h6\" gutterBottom sx={{ color: effectiveAccentColor, fontWeight: 'bold', mb: 1.5, width: '100%', textAlign: 'center' }}>\n              {frontTitle}\n            </Typography>\n            <Box sx={{ mb: 2, width: '100%', whiteSpace: 'pre-wrap', flexGrow: 1, fontSize: '1.1rem' }}>\n                <MarkdownRenderer text={frontText} />\n            </Box>\n            <Divider sx={{ width: '100%', my: 1 }} />\n            <Typography variant=\"subtitle1\" sx={{mb:1, fontWeight: 'medium'}}>Options:</Typography>\n            <List dense sx={{ width: '100%', py: 0 }}>\n              {options && options.map((option) => (\n                <ListItem key={option.id} disablePadding sx={{mb: 0.5}}>\n                  <Chip\n                    label={<MarkdownRenderer text={`${option.id.toUpperCase()}. ${option.text}`} />}\n                    variant=\"outlined\"\n                    sx={{ \n                      width: '100%', \n                      justifyContent: 'flex-start', \n                      py: 1.5, \n                      height: 'auto', \n                      '& .MuiChip-label': { whiteSpace: 'normal', textAlign: 'left', lineHeight: '1.4' },\n                      borderColor: alpha(effectiveAccentColor, 0.5) \n                    }}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        </Paper>\n\n        {/* Back Face */}\n        <Paper\n          elevation={3}\n          sx={{ ...cardFaceStyles, transform: 'rotateY(180deg)', justifyContent: 'center', alignItems: 'center', textAlign: 'center' }}\n        >\n          <Box sx={{display: 'flex', flexDirection: 'column', flexGrow: 1, width: '100%', justifyContent: 'center', alignItems: 'center'}}>\n            <Typography variant=\"h6\" gutterBottom sx={{ color: effectiveAccentColor, fontWeight: 'bold', mb: 2 }}>\n              {backTitle}\n            </Typography>\n            <Box\n                sx={{\n                    p: 1.5, mb: 2, backgroundColor: alpha(theme.palette.success.main, 0.15),\n                    border: `1px solid ${theme.palette.success.main}`, borderRadius: 1,\n                    display: 'flex', alignItems: 'center', width: 'auto', \n                    minWidth: '60%', maxWidth: '95%', boxSizing: 'border-box'\n                }}\n            >\n                <ListItemIcon sx={{minWidth: 'auto', mr: 1, color: theme.palette.success.main }}>\n                    <CheckCircleIcon />\n                </ListItemIcon>\n                <Box sx={{ fontWeight: 'medium', color: theme.palette.success.main, textAlign: 'left', fontSize: '1.1rem' }}>\n                    <MarkdownRenderer text={correctAnswerText} />\n                </Box>\n            </Box>\n\n            {explanation && (\n              <Box sx={{width: '100%', textAlign: 'left', mt: 1, flexGrow: 1, overflowY: 'auto', maxHeight: '150px' }}>\n                <Typography variant=\"subtitle1\" sx={{ fontWeight: 'medium'}}>Explanation:</Typography>\n                {/* --- START OF FIX --- */}\n                {/* Use the MarkdownRenderer for the explanation text */}\n                <Box sx={{ color: 'text.secondary' }}>\n                  <MarkdownRenderer text={explanation} />\n                </Box>\n                {/* --- END OF FIX --- */}\n              </Box>\n            )}\n          </Box>\n        </Paper>\n      </Box>\n      \n      <Box sx={{ position: 'absolute', bottom: 8, right: 8, zIndex: 10 }}> \n        <IconButton\n          onClick={handleFlip}\n          aria-label=\"flip card\"\n          size=\"medium\" \n          sx={{ \n            color: effectiveAccentColor, backgroundColor: alpha(theme.palette.background.default, 0.85), \n            '&:hover': { backgroundColor: alpha(theme.palette.background.paper, 0.95), },\n            boxShadow: theme.shadows[2]\n          }}\n        >\n          <FlipIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n}\n\nexport default FlashcardItem;","// src/components/flashcards/FlashcardViewer.js\nimport React from 'react';\nimport { Box, IconButton, Stack, useTheme, Typography } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBackIosNew';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForwardIos';\n// import ShuffleIcon from '@mui/icons-material/Shuffle';\nimport FlashcardItem from './FlashcardItem'; // <-- UPDATED IMPORT PATH\n\nfunction FlashcardViewer({\n  currentCard,\n  onNextCard,\n  onPreviousCard,\n  accentColor,\n  totalCards,\n  currentIndex\n}) {\n  const theme = useTheme();\n  const effectiveAccentColor = accentColor || theme.palette.primary.main;\n\n  if (!currentCard) {\n    return <Typography>No flashcard to display.</Typography>;\n  }\n\n  return (\n    <Box sx={{ width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mb: 1 }}>\n        Card {currentIndex + 1} of {totalCards} (Click card to flip)\n      </Typography>\n      <Box sx={{ width: '100%', minHeight: '380px', perspective: '1000px', mb: 2.5 }}>\n        <FlashcardItem\n          frontText={currentCard.frontText}\n          options={currentCard.options}\n          correctOptionId={currentCard.correctOptionId}\n          explanation={currentCard.explanation}\n          accentColor={effectiveAccentColor}\n          frontTitle={`Question ${currentIndex + 1}`}\n        />\n      </Box>\n\n      <Stack direction=\"row\" spacing={2} justifyContent=\"center\" alignItems=\"center\" sx={{ width: '100%', mb: 1 }}>\n        <IconButton\n          onClick={onPreviousCard}\n          aria-label=\"previous card\"\n          sx={{ color: effectiveAccentColor }}\n          disabled={totalCards <= 1}\n        >\n          <ArrowBackIcon />\n        </IconButton>\n        <Typography variant=\"body2\" sx={{ color: theme.palette.text.secondary, minWidth: '60px', textAlign: 'center' }}>\n          {currentIndex + 1} / {totalCards}\n        </Typography>\n        <IconButton\n          onClick={onNextCard}\n          aria-label=\"next card\"\n          sx={{ color: effectiveAccentColor }}\n          disabled={totalCards <= 1}\n        >\n          <ArrowForwardIcon />\n        </IconButton>\n      </Stack>\n    </Box>\n  );\n}\n\nexport default FlashcardViewer;","// src/pages/FlashcardPage.js\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Box, Typography, Button, CircularProgress, Alert, Stack } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport ShuffleIcon from '@mui/icons-material/Shuffle';\n\nimport { useFlashcards } from '../hooks/useFlashcards'; // <-- Import the new hook\nimport FlashcardViewer from '../components/flashcards/FlashcardViewer';\nimport { subjectAccentColors as themeSubjectAccentColors } from '../theme';\n\nfunction FlashcardPage() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const theme = useTheme();\n\n  // Get all state and logic from the custom hook\n  const {\n    topicId,\n    allQuestions,\n    flashcards,\n    currentCardIndex,\n    isLoading,\n    error,\n    currentCardData,\n    handleNextCard,\n    handlePreviousCard,\n    handleShuffleCards,\n  } = useFlashcards();\n\n  // Get presentation-related data from location state\n  const pageState = location.state || {};\n  const topicNameFromState = pageState.topicName || topicId.replace(/-/g, ' ');\n  const subject = pageState.subject || 'default';\n  const accentColor = pageState.accentColor || themeSubjectAccentColors[subject.toLowerCase()] || theme.palette.primary.main;\n\n\n  // --- Render Logic ---\n\n  if (isLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"80vh\">\n        <CircularProgress sx={{ color: accentColor }} />\n        <Typography sx={{ ml: 2 }}>Loading Flashcards...</Typography>\n      </Box>\n    );\n  }\n\n  if (error && allQuestions.length === 0) {\n    return (\n      <Box sx={{ p: 3, maxWidth: '900px', margin: 'auto', textAlign: 'center' }}>\n        <Alert severity=\"error\">{error}</Alert>\n        <Button variant=\"outlined\" onClick={() => navigate(-1)} sx={{ mt: 2, borderColor: accentColor, color: accentColor }}>\n          Go Back\n        </Button>\n      </Box>\n    );\n  }\n\n  if (!isLoading && allQuestions.length === 0 && !error) {\n    return (\n      <Box sx={{ p: 3, maxWidth: '900px', margin: 'auto', textAlign: 'center' }}>\n        <Typography variant=\"h5\">No Flashcards Available</Typography>\n        <Typography>No questions were found for \"{topicNameFromState}\" to create flashcards.</Typography>\n        <Button\n          variant=\"outlined\"\n          onClick={() => navigate(subject ? `/subjects/${subject.toLowerCase()}` : '/subjects')}\n          sx={{ mt: 2, borderColor: accentColor, color: accentColor }}\n        >\n          Back to {subject && subject !== 'default' ? subject.charAt(0).toUpperCase() + subject.slice(1) : 'Subject'} Topics\n        </Button>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ p: { xs: 1, sm: 2, md: 3 }, maxWidth: '700px', margin: 'auto', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <Typography variant=\"h4\" gutterBottom sx={{ color: accentColor, fontWeight: 'bold', textAlign: 'center', mb: 2 }}>\n        Flashcards: {topicNameFromState}\n      </Typography>\n\n      {error && flashcards.length > 0 &&\n        <Alert severity=\"warning\" sx={{ mb: 2, width: '100%' }}>{error}</Alert>\n      }\n\n      {currentCardData && (\n        <FlashcardViewer\n          currentCard={currentCardData}\n          onNextCard={handleNextCard}\n          onPreviousCard={handlePreviousCard}\n          accentColor={accentColor}\n          totalCards={flashcards.length}\n          currentIndex={currentCardIndex}\n        />\n      )}\n\n      {allQuestions.length > 1 && (\n        <Button\n          variant=\"text\"\n          onClick={handleShuffleCards}\n          startIcon={<ShuffleIcon />}\n          sx={{ color: accentColor, mt: 0.5, mb: 1.5 }}\n          disabled={isLoading}\n        >\n          Shuffle Cards\n        </Button>\n      )}\n\n      <Stack direction=\"row\" spacing={2} justifyContent=\"center\" sx={{ width: '100%', mt: 1 }}>\n        <Button\n          variant=\"outlined\"\n          onClick={() => navigate(subject ? `/subjects/${subject.toLowerCase()}` : '/subjects')}\n          sx={{\n            borderColor: accentColor,\n            color: accentColor,\n            width: { xs: '100%', sm: 'auto' }\n          }}\n        >\n          Back to {subject && subject !== 'default' ? subject.charAt(0).toUpperCase() + subject.slice(1) : 'Subject'} Topics\n        </Button>\n      </Stack>\n    </Box>\n  );\n}\n\nexport default FlashcardPage;","// src/hooks/useFlashcards.js\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport apiClient from '../api/axiosInstance';\nimport { parseQuestionOptions, shuffleArray } from '../utils/quizUtils';\n\n/**\n * A custom hook to manage all state and logic for the FlashcardPage.\n * @returns {object} An object containing all the state, derived data, and handlers needed by the FlashcardPage component.\n */\nexport const useFlashcards = () => {\n  const { topicId } = useParams();\n\n  // --- State Management ---\n  const [allQuestions, setAllQuestions] = useState([]); // Source of truth for all fetched questions\n  const [flashcards, setFlashcards] = useState([]); // The shuffled list for display\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // --- Data Fetching Logic ---\n  const fetchQuestionsForFlashcards = useCallback(async () => {\n    if (!topicId) {\n      setError(\"Topic ID is missing.\");\n      setIsLoading(false);\n      return;\n    }\n    \n    setIsLoading(true);\n    setError('');\n    try {\n      const response = await apiClient.get(`/api/questions?topicId=${topicId}`);\n      if (Array.isArray(response.data) && response.data.length > 0) {\n        const questionsWithParsedOptions = parseQuestionOptions(response.data);\n        setAllQuestions(questionsWithParsedOptions); // Store the source questions\n\n        // Format and shuffle the initial set of flashcards\n        const formattedForFlashcards = questionsWithParsedOptions.map(q => ({\n          id: q.id,\n          frontText: q.text,\n          options: q.options,\n          correctOptionId: q.correctOptionId,\n          explanation: q.explanation,\n        }));\n        setFlashcards(shuffleArray([...formattedForFlashcards]));\n        setCurrentCardIndex(0);\n      } else {\n        setError('No questions found for this topic to create flashcards.');\n        setAllQuestions([]);\n        setFlashcards([]);\n      }\n    } catch (err) {\n      setError(`Failed to load questions: ${err.response?.data?.message || err.message}`);\n      setAllQuestions([]);\n      setFlashcards([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [topicId]);\n\n  useEffect(() => {\n    fetchQuestionsForFlashcards();\n  }, [fetchQuestionsForFlashcards]);\n\n  // --- Event Handlers ---\n  const handleNextCard = () => {\n    if (flashcards.length > 0) {\n      setCurrentCardIndex((prevIndex) => (prevIndex + 1) % flashcards.length);\n    }\n  };\n\n  const handlePreviousCard = () => {\n    if (flashcards.length > 0) {\n      setCurrentCardIndex((prevIndex) => (prevIndex - 1 + flashcards.length) % flashcards.length);\n    }\n  };\n\n  const handleShuffleCards = () => {\n    if (allQuestions.length > 0) {\n      const formattedForFlashcards = allQuestions.map(q => ({\n        id: q.id,\n        frontText: q.text,\n        options: q.options,\n        correctOptionId: q.correctOptionId,\n        explanation: q.explanation,\n      }));\n      setFlashcards(shuffleArray([...formattedForFlashcards]));\n      setCurrentCardIndex(0);\n    }\n  };\n\n  // --- Memoized Derived State ---\n  const currentCardData = useMemo(() => {\n    return flashcards.length > 0 ? flashcards[currentCardIndex] : null;\n  }, [flashcards, currentCardIndex]);\n\n  // --- Return all state and handlers ---\n  return {\n    topicId,\n    allQuestions,\n    flashcards,\n    currentCardIndex,\n    isLoading,\n    error,\n    currentCardData,\n    handleNextCard,\n    handlePreviousCard,\n    handleShuffleCards,\n  };\n};","import resolveProps from '@mui/utils/resolveProps';\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n  return resolveProps(theme.components[name].defaultProps, props);\n}","// src/utils/quizUtils.js\n\n/**\n * Parses the 'options' field of question objects within an array.\n * If 'options' is a JSON string, it's parsed into an array.\n * If it's already an array, it's returned as is.\n * Handles potential parsing errors.\n * @param {Array<Object>} questionsArray - An array of question objects.\n * @returns {Array<Object>} The array of question objects with 'options' as arrays.\n */\nexport const parseQuestionOptions = (questionsArray) => {\n  if (!Array.isArray(questionsArray)) {\n    console.warn(\"[quizUtils] parseQuestionOptions received non-array input:\", questionsArray);\n    return [];\n  }\n  return questionsArray.map(q => {\n    if (!q || typeof q !== 'object') {\n        console.warn(\"[quizUtils] Encountered invalid item in questionsArray:\", q);\n        return q;\n    }\n    let parsedOptions = [];\n    if (typeof q.options === 'string') {\n      try {\n        parsedOptions = JSON.parse(q.options);\n        if (!Array.isArray(parsedOptions)) {\n            console.warn(`[quizUtils] Parsed options for Q ID ${q.id} is not an array:`, parsedOptions);\n            parsedOptions = [];\n        }\n      } catch (e) {\n        console.error(`[quizUtils] Failed to parse options for question ID ${q.id}:`, q.options, e);\n      }\n    } else if (Array.isArray(q.options)) {\n      parsedOptions = q.options;\n    } else if (q.options !== undefined && q.options !== null) {\n      console.warn(`[quizUtils] Question ID ${q.id} has unexpected options format (not string or array):`, q.options);\n    }\n    return { ...q, options: parsedOptions };\n  });\n};\n\n/**\n * Formats a topic name for display based on its ID and other optional details.\n * @param {string} topicId - The ID of the topic.\n * @param {string|null} topicNameFromState - A pre-formatted name, if available.\n * @param {boolean} isChallenge - Whether this is for a challenge result.\n * @param {Object|null} challengeDetails - Details of the challenge, if applicable.\n * @returns {string} The formatted topic name.\n */\nexport const formatDisplayTopicName = (topicId, topicNameFromState = null, isChallenge = false, challengeDetails = null) => {\n  // ... (your existing formatDisplayTopicName logic from previous step)\n  if (isChallenge && challengeDetails?.topic_name) return `Challenge: ${challengeDetails.topic_name}`;\n  if (isChallenge && topicNameFromState) return `Challenge: ${topicNameFromState}`;\n  if (isChallenge) return `Challenge: ${topicId ? String(topicId).replace(/-/g, ' ') : 'Quiz'}`;\n  if (topicNameFromState && topicId && topicNameFromState !== String(topicId).replace(/-/g, ' ')) { return topicNameFromState; }\n  if (!topicId) return 'N/A';\n  let name = String(topicId).replace(/-/g, ' ');\n  name = name.replace(/^homibhabha practice /i, 'Homi Bhabha Practice - ');\n  name = name.replace(/^pyq /i, 'PYQ ');\n  const classSuffixRegex = /\\s(\\d+(?:st|nd|rd|th))$/i;\n  name = name.replace(classSuffixRegex, (match, p1) => ` - Class ${p1.toUpperCase()}`).trim();\n  name = name.split(' ').map(word => {\n    if (word.toLowerCase() === 'class' || word.toLowerCase() === 'std') return word;\n    if (word.includes('-')) { return word.split('-').map(part => part.charAt(0).toUpperCase() + part.slice(1).toLowerCase()).join('-'); }\n    return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase(); }).join(' ');\n  name = name.replace(/Homi Bhabha Practice - (\\w+) (\\w+)/i, (match, quizClass, difficulty) => `Homi Bhabha Practice - Std ${quizClass} (${difficulty.charAt(0).toUpperCase() + difficulty.slice(1)})`);\n  name = name.replace(/Pyq (\\w+) (\\d+)/i, (match, quizClass, year) => `PYQ - Std ${quizClass} (${year})`);\n  name = name.replace(/Pyq - Class (\\w+) \\((\\d+)\\)/i, (match, quizClass, year) => `PYQ - Std ${quizClass} (${year})`);\n  return name;\n};\n\n/**\n * Shuffles an array in place using the Fisher-Yates algorithm.\n * @param {Array} array - The array to shuffle.\n * @returns {Array} The shuffled array (same instance, modified in place, but also returned).\n */\nexport const shuffleArray = (array) => {\n  if (!array || !Array.isArray(array)) return [];\n  let currentIndex = array.length, randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n  return array; // Returns the same array instance, now shuffled\n};"],"names":["_ref","text","_jsx","ReactMarkdown","remarkPlugins","remarkMath","rehypePlugins","rehypeKatex","components","p","_ref2","node","props","_objectWithoutProperties","_excluded","Typography","_objectSpread","variant","component","sx","mt","mb","a","_ref3","_excluded2","MuiLink","children","createStyled","useThemeProps","name","defaultTheme","themeId","theme","useTheme","getThemeProps","createSvgIcon","d","frontText","options","correctOptionId","explanation","frontTitle","backTitle","accentColor","isFlipped","setIsFlipped","useState","effectiveAccentColor","palette","primary","main","correctOptionObject","find","opt","id","correctAnswerText","concat","toUpperCase","cardMinHeight","cardFaceStyles","position","width","height","minHeight","backfaceVisibility","display","flexDirection","xs","sm","overflowY","border","borderRadius","shape","boxSizing","_jsxs","Box","onClick","perspective","cursor","transition","transformStyle","transform","Paper","elevation","justifyContent","alignItems","textAlign","flexGrow","gutterBottom","color","fontWeight","whiteSpace","fontSize","MarkdownRenderer","Divider","my","List","dense","py","map","option","ListItem","disablePadding","Chip","label","lineHeight","borderColor","alpha","backgroundColor","success","minWidth","maxWidth","ListItemIcon","mr","CheckCircleIcon","maxHeight","bottom","right","zIndex","IconButton","e","stopPropagation","size","background","default","paper","boxShadow","shadows","FlipIcon","currentCard","onNextCard","onPreviousCard","totalCards","currentIndex","FlashcardItem","Stack","direction","spacing","disabled","ArrowBackIcon","secondary","ArrowForwardIcon","navigate","useNavigate","location","useLocation","topicId","allQuestions","flashcards","currentCardIndex","isLoading","error","currentCardData","handleNextCard","handlePreviousCard","handleShuffleCards","useFlashcards","useParams","setAllQuestions","setFlashcards","setCurrentCardIndex","setIsLoading","setError","fetchQuestionsForFlashcards","useCallback","async","response","apiClient","get","Array","isArray","data","length","questionsWithParsedOptions","parseQuestionOptions","formattedForFlashcards","q","shuffleArray","err","_err$response","_err$response$data","message","useEffect","useMemo","prevIndex","pageState","state","topicNameFromState","topicName","replace","subject","themeSubjectAccentColors","toLowerCase","CircularProgress","ml","margin","Alert","severity","Button","md","FlashcardViewer","startIcon","ShuffleIcon","charAt","slice","params","defaultProps","resolveProps","questionsArray","console","warn","parsedOptions","JSON","parse","undefined","formatDisplayTopicName","arguments","isChallenge","challengeDetails","topic_name","String","match","p1","trim","split","word","includes","part","join","quizClass","difficulty","year","array","randomIndex","Math","floor","random"],"sourceRoot":""}