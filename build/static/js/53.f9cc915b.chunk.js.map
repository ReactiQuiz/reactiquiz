{"version":3,"file":"static/js/53.f9cc915b.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js","../node_modules/@mui/icons-material/esm/EditNote.js","../node_modules/@mui/material/esm/CardActions/cardActionsClasses.js","../node_modules/@mui/material/esm/CardActions/CardActions.js","../node_modules/@mui/material/esm/CardContent/cardContentClasses.js","../node_modules/@mui/material/esm/CardContent/CardContent.js","../node_modules/@mui/icons-material/esm/Description.js","components/quiz/homibhabha/PYQPapersModal.js","components/quiz/homibhabha/PracticeTestModal.js","pages/HomibhabhaPage.js","hooks/useHomibhabha.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root'\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 10h11v2H3zm0-2h11V6H3zm0 8h7v-2H3zm15.01-3.13.71-.71c.39-.39 1.02-.39 1.41 0l.71.71c.39.39.39 1.02 0 1.41l-.71.71zm-.71.71-5.3 5.3V21h2.12l5.3-5.3z\"\n}), 'EditNote');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardActionsUtilityClass } from \"./cardActionsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  variants: [{\n    props: {\n      disableSpacing: false\n    },\n    style: {\n      '& > :not(style) ~ :not(style)': {\n        marginLeft: 8\n      }\n    }\n  }]\n});\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n    disableSpacing = false,\n    className,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    disableSpacing\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root'\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8zm2 16H8v-2h8zm0-4H8v-2h8zm-3-5V3.5L18.5 9z\"\n}), 'Description');","// src/components/PYQPapersModal.js\nimport { useState, useEffect } from 'react';\nimport {\n  Dialog, DialogTitle, DialogContent, DialogActions, Button, FormControl,\n  InputLabel, Select, MenuItem, Typography, Box, useTheme, Divider\n} from '@mui/material';\nimport { darken } from '@mui/material/styles';\n\nconst AVAILABLE_CLASSES = ['6', '9']; \nconst AVAILABLE_YEARS = ['2023', '2022', '2021', '2020'];\n\nfunction PYQPapersModal({ open, onClose, onSubmit, accentColor }) {\n  const theme = useTheme();\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedYear, setSelectedYear] = useState('');\n\n  const effectiveAccentColor = accentColor || theme.palette.primary.main;\n\n  useEffect(() => {\n    if (open) {\n      setSelectedClass('');\n      setSelectedYear('');\n    }\n  }, [open]);\n\n  const handleSubmit = () => {\n    if (selectedClass && selectedYear) {\n      onSubmit({ class: selectedClass, year: selectedYear });\n      onClose();\n    } else {\n      alert(\"Please select both class and year.\");\n    }\n  };\n\n  const examDetails = {\n    duration: \"90 minutes\",\n    totalQuestions: 100,\n    marksPerQuestion: 1,\n    negativeMarking: \"No negative marking.\",\n    totalMarks: 100,\n    subjects: \"Physics(30), Chemistry(30), Biology(30), and General Knowledge(10)\"\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} PaperProps={{ sx: { minWidth: '320px', maxWidth: '550px' } }}>\n      <DialogTitle sx={{ backgroundColor: effectiveAccentColor, color: theme.palette.getContrastText(effectiveAccentColor), pb: 1.5, pt: 2 }}>\n        Previous Year Question Paper\n      </DialogTitle>\n      <DialogContent sx={{ pt: '20px !important', display: 'flex', flexDirection: 'column', gap: 2.5 }}>\n        <Typography variant=\"h6\" gutterBottom>Exam Details:</Typography>\n        <Box sx={{ textAlign: 'left', pl: 1 }}>\n          <Typography variant=\"body2\"><strong>Duration:</strong> {examDetails.duration}</Typography>\n          <Typography variant=\"body2\"><strong>Total Questions:</strong> {examDetails.totalQuestions}</Typography>\n          <Typography variant=\"body2\"><strong>Marks per Question:</strong> {examDetails.marksPerQuestion}</Typography>\n          <Typography variant=\"body2\"><strong>Total Marks:</strong> {examDetails.totalMarks}</Typography>\n          <Typography variant=\"body2\"><strong>Negative Marking:</strong> {examDetails.negativeMarking}</Typography>\n          <Typography variant=\"body2\"><strong>Syllabus Focus:</strong> {examDetails.subjects}</Typography>\n          <Typography variant=\"body2\" sx={{mt: 1}}><em>(Note: Specific details might vary per year/level, always refer to official notifications.)</em></Typography>\n        </Box>\n        <Divider sx={{ my: 2 }}/>\n        <FormControl fullWidth required>\n          <InputLabel id=\"pyq-class-select-label\">Select Class (Std.)</InputLabel>\n          <Select\n            labelId=\"pyq-class-select-label\"\n            value={selectedClass}\n            label=\"Select Class (Std.)\"\n            onChange={(e) => setSelectedClass(e.target.value)}\n            MenuProps={{ PaperProps: { sx: { backgroundColor: theme.palette.background.paper } } }}\n          >\n            <MenuItem value=\"\"><em>-- Select Class --</em></MenuItem>\n            {AVAILABLE_CLASSES.map(cls => (\n              <MenuItem key={cls} value={cls}>{cls}th</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl fullWidth required disabled={!selectedClass}>\n          <InputLabel id=\"pyq-year-select-label\">Select Year</InputLabel>\n          <Select\n            labelId=\"pyq-year-select-label\"\n            value={selectedYear}\n            label=\"Select Year\"\n            onChange={(e) => setSelectedYear(e.target.value)}\n            MenuProps={{ PaperProps: { sx: { backgroundColor: theme.palette.background.paper } } }}\n          >\n            <MenuItem value=\"\"><em>-- Select Year --</em></MenuItem>\n            {AVAILABLE_YEARS.map(year => (\n              <MenuItem key={year} value={year}>{year}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions sx={{ p: '16px 24px' }}>\n        <Button onClick={onClose} sx={{ color: effectiveAccentColor }}>Cancel</Button>\n        <Button\n          onClick={handleSubmit}\n          variant=\"contained\"\n          sx={{\n            backgroundColor: effectiveAccentColor,\n            color: theme.palette.getContrastText(effectiveAccentColor),\n            '&:hover': { backgroundColor: darken(effectiveAccentColor, 0.2) }\n          }}\n          disabled={!selectedClass || !selectedYear}\n        >\n          Start PYQ Test\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default PYQPapersModal;","// src/components/PracticeTestModal.js\nimport { useState, useEffect } from 'react';\nimport {\n  Dialog, DialogTitle, DialogContent, DialogActions, Button, FormControl,\n  InputLabel, Select, MenuItem, Typography, useTheme\n} from '@mui/material';\nimport { darken } from '@mui/material/styles';\n\n// Assuming Homi Bhabha is for Std 6 and Std 9\nconst AVAILABLE_CLASSES = ['6', '9'];\n\nfunction PracticeTestModal({ open, onClose, onSubmit, accentColor }) {\n  const theme = useTheme();\n  const [selectedClass, setSelectedClass] = useState('');\n  const [difficulty, setDifficulty] = useState('medium'); // Example additional setting\n\n  const effectiveAccentColor = accentColor || theme.palette.primary.main;\n\n  useEffect(() => {\n    if (open) {\n      setSelectedClass('');\n      setDifficulty('medium');\n    }\n  }, [open]);\n\n  const handleSubmit = () => {\n    if (selectedClass) {\n      onSubmit({ class: selectedClass, difficulty });\n      onClose();\n    } else {\n      alert(\"Please select a class.\");\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} PaperProps={{ sx: { minWidth: '320px', maxWidth: '500px' } }}>\n      <DialogTitle sx={{ backgroundColor: effectiveAccentColor, color: theme.palette.getContrastText(effectiveAccentColor), pb: 1.5, pt: 2 }}>\n        Homi Bhabha Practice Test\n      </DialogTitle>\n      <DialogContent sx={{ pt: '20px !important', display: 'flex', flexDirection: 'column', gap: 2.5 }}>\n        <Typography variant=\"body1\" gutterBottom>\n          Select your class and preferred difficulty to start a practice test.\n        </Typography>\n        <FormControl fullWidth required>\n          <InputLabel id=\"practice-class-select-label\">Select Class (Std.)</InputLabel>\n          <Select\n            labelId=\"practice-class-select-label\"\n            value={selectedClass}\n            label=\"Select Class (Std.)\"\n            onChange={(e) => setSelectedClass(e.target.value)}\n            MenuProps={{ PaperProps: { sx: { backgroundColor: theme.palette.background.paper } } }}\n          >\n            <MenuItem value=\"\"><em>-- Select Class --</em></MenuItem>\n            {AVAILABLE_CLASSES.map(cls => (\n              <MenuItem key={cls} value={cls}>{cls}th</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl fullWidth>\n          <InputLabel id=\"practice-difficulty-select-label\">Difficulty</InputLabel>\n          <Select\n            labelId=\"practice-difficulty-select-label\"\n            value={difficulty}\n            label=\"Difficulty\"\n            onChange={(e) => setDifficulty(e.target.value)}\n            MenuProps={{ PaperProps: { sx: { backgroundColor: theme.palette.background.paper } } }}\n          >\n            <MenuItem value=\"easy\">Easy</MenuItem>\n            <MenuItem value=\"medium\">Medium</MenuItem>\n            <MenuItem value=\"hard\">Hard</MenuItem>\n            <MenuItem value=\"mixed\">Mixed (All Levels)</MenuItem>\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions sx={{ p: '16px 24px' }}>\n        <Button onClick={onClose} sx={{ color: effectiveAccentColor }}>Cancel</Button>\n        <Button\n          onClick={handleSubmit}\n          variant=\"contained\"\n          sx={{\n            backgroundColor: effectiveAccentColor,\n            color: theme.palette.getContrastText(effectiveAccentColor),\n            '&:hover': { backgroundColor: darken(effectiveAccentColor, 0.2) }\n          }}\n          disabled={!selectedClass}\n        >\n          Start Practice Test\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default PracticeTestModal;","// src/pages/HomibhabhaPage.js\nimport { Box, Typography, useTheme, Card, CardContent, CardActions, Button, Grid } from '@mui/material';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport EditNoteIcon from '@mui/icons-material/EditNote';\n\nimport { useHomibhabha } from '../hooks/useHomibhabha'; // <-- Import the new hook\nimport PYQPapersModal from '../components/quiz/homibhabha/PYQPapersModal';\nimport PracticeTestModal from '../components/quiz/homibhabha/PracticeTestModal';\n\nfunction HomibhabhaPage() {\n  const theme = useTheme();\n\n  // Use the custom hook to get all state and logic\n  const {\n    pyqModalOpen,\n    practiceTestModalOpen,\n    homiBhabhaAccentColor,\n    handleOpenPyqModal,\n    handleClosePyqModal,\n    handleStartPyqTest,\n    handleOpenPracticeTestModal,\n    handleClosePracticeTestModal,\n    handleStartPracticeTest,\n  } = useHomibhabha();\n\n  const cardStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    border: `1px solid ${homiBhabhaAccentColor}`,\n    borderRadius: theme.shape.borderRadius * 2,\n    transition: 'transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out',\n    '&:hover': {\n      transform: 'translateY(-4px)',\n      boxShadow: theme.shadows[6],\n    },\n    width: '100%'\n  };\n\n  return (\n    <Box sx={{ p: 3, flexGrow: 1, width: '100%' }}>\n      <Typography\n        variant=\"h4\"\n        gutterBottom\n        sx={{\n          color: homiBhabhaAccentColor,\n          fontWeight: 'bold',\n          textAlign: 'center',\n          mb: 4\n        }}\n      >\n        Homi Bhabha Balvaidnyanik Resources\n      </Typography>\n\n      <Grid container spacing={4} justifyContent=\"center\" alignItems=\"stretch\">\n        <Grid item xs={12} sm={6} md={5} sx={{ display: 'flex', width: '100%' }}>\n          <Card sx={cardStyle}>\n            <CardContent sx={{ flexGrow: 1, textAlign: 'center' }}>\n              <DescriptionIcon sx={{ fontSize: 60, color: homiBhabhaAccentColor, mb: 2 }} />\n              <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ fontWeight: 'medium' }}>\n                Previous Year Papers\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Access and review question papers from previous Homi Bhabha Balvaidnyanik exams to understand patterns and difficulty levels.\n              </Typography>\n            </CardContent>\n            <CardActions sx={{ justifyContent: 'center', p: 2, mt: 'auto' }}>\n              <Button\n                size=\"large\"\n                variant=\"contained\"\n                onClick={handleOpenPyqModal}\n                sx={{\n                  backgroundColor: homiBhabhaAccentColor,\n                  color: theme.palette.getContrastText(homiBhabhaAccentColor),\n                  '&:hover': {\n                    backgroundColor: theme.palette.augmentColor({ color: { main: homiBhabhaAccentColor } }).dark,\n                  }\n                }}\n              >\n                View Papers\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={5} sx={{ display: 'flex', width: '100%' }}>\n          <Card sx={cardStyle}>\n            <CardContent sx={{ flexGrow: 1, textAlign: 'center' }}>\n              <EditNoteIcon sx={{ fontSize: 60, color: homiBhabhaAccentColor, mb: 2 }} />\n              <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ fontWeight: 'medium' }}>\n                Practice Test Papers\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Take practice tests designed to simulate the Homi Bhabha exam environment and assess your preparation. (100 Questions, 90 Minutes)\n              </Typography>\n            </CardContent>\n            <CardActions sx={{ justifyContent: 'center', p: 2, mt: 'auto' }}>\n              <Button\n                size=\"large\"\n                variant=\"contained\"\n                onClick={handleOpenPracticeTestModal}\n                sx={{\n                  backgroundColor: homiBhabhaAccentColor,\n                  color: theme.palette.getContrastText(homiBhabhaAccentColor),\n                  '&:hover': {\n                    backgroundColor: theme.palette.augmentColor({ color: { main: homiBhabhaAccentColor } }).dark,\n                  }\n                }}\n              >\n                Start Practice Test\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      </Grid>\n\n      <Box sx={{ mt: 5, textAlign: 'center' }}>\n        <Typography paragraph color=\"text.secondary\">\n          More resources and information will be added here soon.\n        </Typography>\n      </Box>\n\n      <PYQPapersModal\n        open={pyqModalOpen}\n        onClose={handleClosePyqModal}\n        onSubmit={handleStartPyqTest}\n        accentColor={homiBhabhaAccentColor}\n      />\n\n      <PracticeTestModal\n        open={practiceTestModalOpen}\n        onClose={handleClosePracticeTestModal}\n        onSubmit={handleStartPracticeTest}\n        accentColor={homiBhabhaAccentColor}\n      />\n    </Box>\n  );\n}\n\nexport default HomibhabhaPage;","// src/hooks/useHomibhabha.js\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useTheme } from '@mui/material/styles';\n\n/**\n * A custom hook to manage all state and logic for the HomibhabhaPage.\n * It handles modal visibility and the logic for starting different test types.\n */\nexport const useHomibhabha = () => {\n  const navigate = useNavigate();\n  const theme = useTheme();\n\n  // --- State for Modals ---\n  const [pyqModalOpen, setPyqModalOpen] = useState(false);\n  const [practiceTestModalOpen, setPracticeTestModalOpen] = useState(false);\n  \n  // --- UI-related Data ---\n  // We can also define the accent color here so the page doesn't have to.\n  const homiBhabhaAccentColor = theme.palette.secondary.main;\n\n  // --- Modal Handlers ---\n  const handleOpenPyqModal = () => setPyqModalOpen(true);\n  const handleClosePyqModal = () => setPyqModalOpen(false);\n\n  const handleOpenPracticeTestModal = () => setPracticeTestModalOpen(true);\n  const handleClosePracticeTestModal = () => setPracticeTestModalOpen(false);\n\n  // --- Test Start Handlers (Navigation Logic) ---\n  const handleStartPyqTest = (settings) => {\n    console.log(\"Starting PYQ Test with settings:\", settings);\n    navigate(`/quiz/pyq-${settings.class}-${settings.year}`, {\n      state: {\n        difficulty: 'mixed', \n        numQuestions: 100, \n        topicName: `Homi Bhabha PYQ ${settings.class}th - ${settings.year}`,\n        accentColor: homiBhabhaAccentColor,\n        quizClass: settings.class,\n        subject: \"homibhabha-pyq\",\n        isPYQ: true,\n        year: settings.year\n      }\n    });\n    handleClosePyqModal();\n  };\n\n  const handleStartPracticeTest = (settings) => {\n    console.log(\"Starting Homi Bhabha Practice Test with settings:\", settings);\n    navigate(`/quiz/homibhabha-practice-${settings.class}`, { \n      state: {\n        quizType: 'homibhabha-practice',\n        quizClass: settings.class,\n        difficulty: settings.difficulty,\n        topicName: `Homi Bhabha Practice Test - Std ${settings.class}th (${settings.difficulty})`,\n        accentColor: homiBhabhaAccentColor,\n        subject: \"homibhabha\",\n        timeLimit: 90 * 60,\n        questionComposition: {\n          physics: 30,\n          chemistry: 30,\n          biology: 30,\n          gk: 10\n        },\n        totalQuestions: 100\n      }\n    });\n    handleClosePracticeTestModal();\n  };\n\n  return {\n    pyqModalOpen,\n    practiceTestModalOpen,\n    homiBhabhaAccentColor,\n    handleOpenPyqModal,\n    handleClosePyqModal,\n    handleStartPyqTest,\n    handleOpenPracticeTestModal,\n    handleClosePracticeTestModal,\n    handleStartPracticeTest,\n  };\n};"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overflow","React","inProps","ref","props","useDefaultProps","className","raised","other","_objectWithoutProperties","ownerState","_objectSpread","classes","composeClasses","root","useUtilityClasses","_jsx","clsx","elevation","undefined","createSvgIcon","d","getCardActionsUtilityClass","CardActionsRoot","overridesResolver","styles","disableSpacing","spacing","display","alignItems","padding","variants","style","marginLeft","slots","getCardContentUtilityClass","CardContentRoot","paddingBottom","component","as","AVAILABLE_CLASSES","AVAILABLE_YEARS","_ref","open","onClose","onSubmit","accentColor","theme","useTheme","selectedClass","setSelectedClass","useState","selectedYear","setSelectedYear","effectiveAccentColor","palette","primary","main","useEffect","examDetails","_jsxs","Dialog","PaperProps","sx","minWidth","maxWidth","children","DialogTitle","backgroundColor","color","getContrastText","pb","pt","DialogContent","flexDirection","gap","Typography","variant","gutterBottom","Box","textAlign","pl","mt","Divider","my","FormControl","fullWidth","required","InputLabel","id","Select","labelId","value","label","onChange","e","target","MenuProps","background","paper","MenuItem","map","cls","disabled","year","DialogActions","p","Button","onClick","handleSubmit","class","alert","darken","difficulty","setDifficulty","pyqModalOpen","practiceTestModalOpen","homiBhabhaAccentColor","handleOpenPyqModal","handleClosePyqModal","handleStartPyqTest","handleOpenPracticeTestModal","handleClosePracticeTestModal","handleStartPracticeTest","useHomibhabha","navigate","useNavigate","setPyqModalOpen","setPracticeTestModalOpen","secondary","settings","console","log","concat","state","numQuestions","topicName","quizClass","subject","isPYQ","quizType","timeLimit","questionComposition","physics","chemistry","biology","gk","totalQuestions","cardStyle","height","border","borderRadius","shape","transition","transform","boxShadow","shadows","width","flexGrow","fontWeight","mb","Grid","container","justifyContent","item","xs","sm","md","Card","CardContent","DescriptionIcon","fontSize","CardActions","size","augmentColor","dark","EditNoteIcon","paragraph","PYQPapersModal","PracticeTestModal"],"sourceRoot":""}