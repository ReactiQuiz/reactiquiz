{"version":3,"file":"static/js/205.41f39dd0.chunk.js","mappings":"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","sources":["components/shared/MarkdownRenderer.js","utils/formatTime.js","components/challenges/ChallengeSetupModal.js","components/results/HistoricalResultItem.js","components/results/HistoricalResultsList.js","components/results/QuizResultSummary.js","components/results/QuestionBreakdown.js","components/results/ResultsActionButtons.js","components/results/HistoricalResultDetailView.js","components/results/ResultRevealOverlay.js","pages/ResultsPage.js","hooks/useResults.js","utils/quizUtils.js","components/shared/DeleteConfirmationDialog.js"],"sourcesContent":["// src/components/shared/MarkdownRenderer.js\r\nimport React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkMath from 'remark-math';\r\nimport rehypeKatex from 'rehype-katex';\r\nimport { Typography, Link as MuiLink } from '@mui/material';\r\n\r\n// This component will render markdown text and correctly format LaTeX math blocks.\r\nfunction MarkdownRenderer({ text }) {\r\n    if (!text) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <ReactMarkdown\r\n            remarkPlugins={[remarkMath]}\r\n            rehypePlugins={[rehypeKatex]}\r\n            components={{\r\n                p: ({ node, ...props }) => <Typography variant=\"inherit\" component=\"div\" sx={{ mt: 1, mb: 1 }} {...props} />,\r\n                a: ({ node, ...props }) => <MuiLink {...props} />,\r\n                // Add more custom components for other markdown elements if needed\r\n            }}\r\n        >\r\n            {text}\r\n        </ReactMarkdown>\r\n    );\r\n}\r\n\r\nexport default MarkdownRenderer;","// src/utils/formatTime.js\nexport const formatTime = (totalSeconds) => {\n  if (totalSeconds == null || typeof totalSeconds !== 'number' || totalSeconds < 0) {\n    return 'N/A';\n  }\n  const hours = Math.floor(totalSeconds / 3600);\n  const minutes = Math.floor((totalSeconds % 3600) / 60);\n  const seconds = Math.floor(totalSeconds % 60);\n\n  const paddedHours = String(hours).padStart(2, '0');\n  const paddedMinutes = String(minutes).padStart(2, '0');\n  const paddedSeconds = String(seconds).padStart(2, '0');\n\n  if (hours > 0) {\n    return `${paddedHours}h ${paddedMinutes}m ${paddedSeconds}s`;\n  }\n  if (minutes > 0) {\n    return `${paddedMinutes}m ${paddedSeconds}s`;\n  }\n  return `${paddedSeconds}s`;\n};","// src/components/ChallengeSetupModal.js\nimport { useState, useEffect, useCallback } from 'react';\nimport {\n  Dialog, DialogTitle, DialogContent, DialogActions, Button, FormControl,\n  InputLabel, Select, MenuItem, Typography, Box, useTheme, CircularProgress, Alert\n} from '@mui/material';\nimport { darken } from '@mui/material/styles';\nimport SportsKabaddiIcon from '@mui/icons-material/SportsKabaddi';\nimport apiClient from '../../api/axiosInstance';\n\nfunction ChallengeSetupModal({\n  open,\n  onClose,\n  currentUser,\n  quizDataForChallenge, // Expected: { topicId, topicName, difficulty, numQuestions, quizClass, questionIds (array of strings), subject }\n  accentColor\n}) {\n  const theme = useTheme();\n  const [friendsList, setFriendsList] = useState([]);\n  const [isLoadingFriends, setIsLoadingFriends] = useState(false);\n  const [selectedFriendId, setSelectedFriendId] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const effectiveAccentColor = accentColor || theme.palette.secondary.main;\n\n  const fetchFriends = useCallback(async () => {\n    if (!currentUser?.token) return;\n    setIsLoadingFriends(true);\n    setError('');\n    try {\n      const response = await apiClient.get('/api/friends', {\n        headers: { Authorization: `Bearer ${currentUser.token}` }\n      });\n      setFriendsList(response.data || []);\n    } catch (err) {\n      setError('Failed to load your friends list.');\n      console.error(\"Error fetching friends:\", err);\n    } finally {\n      setIsLoadingFriends(false);\n    }\n  }, [currentUser?.token]);\n\n  useEffect(() => {\n    if (open) {\n      fetchFriends();\n      setSelectedFriendId(''); \n      setError('');\n      setSuccessMessage('');\n      setIsSubmitting(false);\n    }\n  }, [open, fetchFriends]);\n\n  const handleSendChallenge = async () => {\n    if (!selectedFriendId) {\n      setError('Please select a friend to challenge.');\n      return;\n    }\n    if (!quizDataForChallenge || !quizDataForChallenge.questionIds || quizDataForChallenge.questionIds.length === 0 || !quizDataForChallenge.subject) {\n        setError('Quiz data for challenge is incomplete or missing subject.');\n        return;\n    }\n    \n    setIsSubmitting(true);\n    setError('');\n    setSuccessMessage('');\n\n    try {\n      const payload = {\n        challenged_friend_id: selectedFriendId,\n        topic_id: quizDataForChallenge.topicId,\n        topic_name: quizDataForChallenge.topicName,\n        difficulty: quizDataForChallenge.difficulty,\n        num_questions: quizDataForChallenge.questionIds.length, // Use actual length of questionIds\n        quiz_class: quizDataForChallenge.quizClass || null,\n        question_ids_json: JSON.stringify(quizDataForChallenge.questionIds),\n        subject: quizDataForChallenge.subject \n      };\n      const response = await apiClient.post('/api/challenges', payload, {\n        headers: { Authorization: `Bearer ${currentUser.token}` }\n      });\n      setSuccessMessage(response.data.message || 'Challenge sent successfully!');\n      setTimeout(() => {\n        onClose(); \n      }, 2000);\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to send challenge. They might already be in a challenge or an error occurred.');\n      console.error(\"Error sending challenge:\", err.response || err);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} PaperProps={{ sx: { minWidth: '320px', maxWidth: '500px' } }}>\n      <DialogTitle sx={{ backgroundColor: effectiveAccentColor, color: theme.palette.getContrastText(effectiveAccentColor), pb: 1.5, pt: 2 }}>\n        Challenge a Friend\n      </DialogTitle>\n      <DialogContent sx={{ pt: '20px !important', display: 'flex', flexDirection: 'column', gap: 2 }}>\n        <Typography variant=\"body2\" gutterBottom>\n          You are about to challenge a friend using the following quiz:\n        </Typography>\n        <Box sx={{pl:1, borderLeft: `3px solid ${effectiveAccentColor}`, mb:1}}>\n            <Typography variant=\"body2\"><strong>Topic:</strong> {quizDataForChallenge?.topicName || 'N/A'}</Typography>\n            <Typography variant=\"body2\"><strong>Difficulty:</strong> {quizDataForChallenge?.difficulty || 'N/A'}</Typography>\n            <Typography variant=\"body2\"><strong>Questions:</strong> {quizDataForChallenge?.questionIds?.length || 'N/A'}</Typography>\n            {quizDataForChallenge?.quizClass && <Typography variant=\"body2\"><strong>Class:</strong> {quizDataForChallenge.quizClass}</Typography>}\n            {quizDataForChallenge?.subject && <Typography variant=\"body2\"><strong>Subject:</strong> {quizDataForChallenge.subject}</Typography>}\n        </Box>\n        \n        {isLoadingFriends ? <CircularProgress sx={{alignSelf: 'center', color: effectiveAccentColor}} /> : (\n          <FormControl fullWidth margin=\"normal\" disabled={friendsList.length === 0}>\n            <InputLabel id=\"select-friend-label-challenge\">Select Friend to Challenge</InputLabel>\n            <Select\n              labelId=\"select-friend-label-challenge\"\n              value={selectedFriendId}\n              label=\"Select Friend to Challenge\"\n              onChange={(e) => setSelectedFriendId(e.target.value)}\n              MenuProps={{ PaperProps: { sx: { backgroundColor: theme.palette.background.paper } } }}\n            >\n              <MenuItem value=\"\"><em>-- Select a Friend --</em></MenuItem>\n              {friendsList.map((friend) => (\n                <MenuItem key={friend.friendId} value={friend.friendId}>\n                  {friend.friendUsername}\n                </MenuItem>\n              ))}\n            </Select>\n            {friendsList.length === 0 && !isLoadingFriends && <Typography variant=\"caption\" color=\"text.secondary\">You have no friends to challenge. Add friends from the 'Manage Friends' page.</Typography>}\n          </FormControl>\n        )}\n\n        {error && <Alert severity=\"error\" sx={{ mt: 1 }}>{error}</Alert>}\n        {successMessage && <Alert severity=\"success\" sx={{ mt: 1 }}>{successMessage}</Alert>}\n      </DialogContent>\n      <DialogActions sx={{ p: '16px 24px' }}>\n        <Button onClick={onClose} sx={{ color: effectiveAccentColor }}>Cancel</Button>\n        <Button\n          onClick={handleSendChallenge}\n          variant=\"contained\"\n          disabled={isSubmitting || isLoadingFriends || !selectedFriendId || friendsList.length === 0}\n          sx={{\n            backgroundColor: effectiveAccentColor,\n            color: theme.palette.getContrastText(effectiveAccentColor),\n            '&:hover': { backgroundColor: darken(effectiveAccentColor, 0.2) }\n          }}\n          startIcon={isSubmitting ? <CircularProgress size={20} color=\"inherit\"/> : <SportsKabaddiIcon />}\n        >\n          {isSubmitting ? 'Sending...' : 'Send Challenge'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default ChallengeSetupModal;","// src/components/results/HistoricalResultItem.js\nimport { Paper, Box, Typography, Chip, IconButton, useTheme, alpha, Stack, Tooltip } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SportsKabaddiIcon from '@mui/icons-material/SportsKabaddi';\nimport { useNavigate } from 'react-router-dom';\nimport { subjectAccentColors } from '../../theme';\nimport { formatDisplayTopicName } from '../../utils/quizUtils';\n\nfunction HistoricalResultItem({ result, onDeleteClick, showDeleteButton, isChallengeResult }) {\n  const theme = useTheme();\n  const navigate = useNavigate();\n\n  if (!result) {\n    return null;\n  }\n\n  const topicName = formatDisplayTopicName(result.topicId, result.topicName, isChallengeResult, result);\n  const itemAccentColor = subjectAccentColors[result.subject?.toLowerCase()] || theme.palette.grey[700];\n\n  const handleResultClick = () => {\n    if (result && result.id) {\n      navigate(`/results/${result.id}`);\n    }\n  };\n\n  // Helper function to get more vibrant chip styles\n  const getVibrantChipStyles = (percentage) => {\n    if (percentage >= 70) {\n      return {\n        backgroundColor: theme.palette.success.main,\n        color: theme.palette.getContrastText(theme.palette.success.main),\n      };\n    }\n    if (percentage >= 50) {\n      return {\n        backgroundColor: theme.palette.warning.main,\n        color: theme.palette.getContrastText(theme.palette.warning.main),\n      };\n    }\n    return {\n      backgroundColor: theme.palette.error.main,\n      color: theme.palette.getContrastText(theme.palette.error.main),\n    };\n  };\n\n  return (\n    <Paper\n      onClick={handleResultClick}\n      sx={{\n        p: 1.5,\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        borderRadius: 2,\n        borderLeft: `4px solid ${itemAccentColor}`,\n        cursor: 'pointer',\n        transition: 'transform 0.2s, box-shadow 0.2s',\n        '&:hover': {\n          transform: 'translateY(-3px)',\n          boxShadow: theme.shadows[5],\n          backgroundColor: alpha(theme.palette.action.hover, 0.06)\n        },\n      }}\n      elevation={2}\n    >\n      <Box sx={{ flexGrow: 1 }}>\n        <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mb: 1 }}>\n          {isChallengeResult && <SportsKabaddiIcon sx={{ color: itemAccentColor, fontSize: '1rem' }} />}\n          <Typography variant=\"subtitle1\" sx={{ textTransform: 'capitalize', fontWeight: 500, color: itemAccentColor, lineHeight: 1.2, flexGrow: 1 }}>\n            {topicName}\n          </Typography>\n        </Stack>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mt: 0.5, alignItems: 'center' }}>\n          {result.class && <Chip label={`Class ${result.class}`} size=\"small\" variant=\"outlined\" sx={{ fontSize: '0.7rem', height: '18px' }} />}\n          {result.difficulty && <Chip label={result.difficulty} size=\"small\" variant=\"outlined\" sx={{ textTransform: 'capitalize', fontSize: '0.7rem', height: '18px' }} />}\n          {/* UPDATED: Date is now a chip */}\n          <Chip label={new Date(result.timestamp).toLocaleDateString()} size=\"small\" variant=\"outlined\" sx={{ fontSize: '0.7rem', height: '18px' }}/>\n        </Box>\n      </Box>\n\n      <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" sx={{ mt: 1.5, pt: 1, borderTop: `1px solid ${theme.palette.divider}` }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n          {/* REMOVED: TimerIcon is gone */}\n          <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\n            {result.score}/{result.totalQuestions}\n          </Typography>\n        </Box>\n\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <Chip\n            label={`${result.percentage}%`}\n            sx={{\n              fontWeight: 'bold',\n              fontSize: '0.9rem',\n              height: '26px',\n              ...getVibrantChipStyles(result.percentage) // UPDATED: More vibrant colors\n            }}\n          />\n          {showDeleteButton && onDeleteClick && (\n            <Tooltip title=\"Delete Result\">\n              <IconButton size=\"small\" onClick={(e) => { e.stopPropagation(); onDeleteClick(result.id); }} sx={{ color: theme.palette.error.light, '&:hover': { backgroundColor: alpha(theme.palette.error.main, 0.2) } }}>\n                <DeleteIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          )}\n        </Box>\n      </Stack>\n    </Paper>\n  );\n}\n\nexport default HistoricalResultItem;","// src/components/results/HistoricalResultsList.js\nimport React from 'react';\nimport { Box, Typography, Paper, Button, Alert, Grid } from '@mui/material';\nimport HomeIcon from '@mui/icons-material/Home';\nimport { useNavigate } from 'react-router-dom';\nimport HistoricalResultItem from './HistoricalResultItem';\n\nfunction HistoricalResultsList({\n  results,\n  isLoading,\n  error,\n  deleteError,\n  onDeleteClick,\n  currentUser,\n  accentColor\n}) {\n  const navigate = useNavigate();\n\n  if (isLoading) {\n    return null;\n  }\n\n  if (error) {\n    return <Alert severity=\"error\" sx={{ mt: 2 }}>{error}</Alert>;\n  }\n\n  if (deleteError) {\n    return <Alert severity=\"error\" sx={{ mt: 2 }}>{deleteError}</Alert>;\n  }\n\n  if (!results || results.length === 0) {\n    return (\n      <Paper elevation={2} sx={{ p: 3, textAlign: 'center', mt: 4, borderTop: `5px solid ${accentColor}` }}>\n        <Typography variant=\"h6\" gutterBottom>No Saved Results Found</Typography>\n        <Typography sx={{ mb: 2 }}>You haven't completed any quizzes yet under this account.</Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<HomeIcon />}\n          onClick={() => navigate('/subjects')}\n          sx={{ backgroundColor: accentColor, '&:hover': { backgroundColor: theme => theme.palette.augmentColor({ color: { main: accentColor } }).dark } }}\n        >\n          Explore Quizzes\n        </Button>\n      </Paper>\n    );\n  }\n\n  return (\n    <Grid container width=\"100%\" spacing={{\n      xs: '0%',\n      sm: '2%',\n      md: '1%',\n      lg: '1%',\n      xl: '2%'\n    }}>\n      {results.map((result) => (\n        // Grid item sizing for 1, 2, 4, and 6 columns\n        <Grid item key={result.id} width={{\n          xs: '100%',\n          sm: '49%',\n          md: '24.25%',\n          lg: '15.75%',\n          xl: '15%'\n        }} sx={{ mt: 2 }}>\n          <HistoricalResultItem\n            result={result}\n            onDeleteClick={onDeleteClick}\n            showDeleteButton={currentUser && currentUser.id === result.userId}\n            isChallengeResult={!!result.challenge_id}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nexport default HistoricalResultsList;","// src/components/results/QuizResultSummary.js\nimport { useState, useEffect, useRef } from 'react';\nimport {\n  Typography, Paper, Divider, Chip, Box, useTheme, Grid, LinearProgress,\n} from '@mui/material';\nimport { alpha } from '@mui/material/styles';\nimport TimerIcon from '@mui/icons-material/Timer';\nimport { formatTime } from '../../utils/formatTime'; // Ensure this path is correct\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\n// No need to import formatDisplayTopicName here, as topicName should be passed in pre-formatted\n\nfunction QuizResultSummary({ quizResult, quizTitle, accentColor }) {\n  const theme = useTheme();\n  const effectiveAccentColor = accentColor || theme.palette.primary.main;\n\n  // Destructure directly from quizResult.\n  // 'topicName' (the display name) and 'challenge_id' should be properties of the quizResult object.\n  const {\n    topicName, // This should be the pre-formatted display name passed in quizResult\n    score,\n    totalQuestions,\n    percentage,\n    difficulty,\n    // numQuestionsConfigured, // Not typically displayed in summary, but totalQuestions is\n    class: quizClassFromResult,\n    timeTaken,\n    challenge_id // This comes directly from the quizResult object\n  } = quizResult || {}; // Default to empty object if quizResult is initially undefined\n\n  const [animatedScore, setAnimatedScore] = useState(0);\n  const [animatedPercentage, setAnimatedPercentage] = useState(0);\n  const scoreAnimationRef = useRef();\n  const percentageAnimationRef = useRef();\n\n  useEffect(() => {\n    if (score === undefined || percentage === undefined || score === null || percentage === null) {\n        setAnimatedScore(0);\n        setAnimatedPercentage(0);\n        return;\n    }\n    const scoreTarget = Math.max(0, score);\n    const percentageTarget = Math.max(0, Math.min(100, percentage));\n    const animationDuration = 1200;\n    const animateValue = (startValue, endValue, duration, setter, animationRef) => {\n        let startTime = null;\n        const step = (timestamp) => {\n            if (!startTime) startTime = timestamp;\n            const progress = Math.min((timestamp - startTime) / duration, 1);\n            const easedProgress = 1 - Math.pow(1 - progress, 3);\n            setter(Math.floor(easedProgress * (endValue - startValue) + startValue));\n            if (progress < 1) {\n                animationRef.current = requestAnimationFrame(step);\n            } else {\n                 setter(endValue);\n            }\n        };\n        animationRef.current = requestAnimationFrame(step);\n    };\n    setAnimatedScore(0);\n    setAnimatedPercentage(0);\n    if (scoreAnimationRef.current) cancelAnimationFrame(scoreAnimationRef.current);\n    if (percentageAnimationRef.current) cancelAnimationFrame(percentageAnimationRef.current);\n    animateValue(0, scoreTarget, animationDuration, setAnimatedScore, scoreAnimationRef);\n    animateValue(0, percentageTarget, animationDuration, setAnimatedPercentage, percentageAnimationRef);\n    return () => {\n      // eslint-disable-next-line\n        if (scoreAnimationRef.current) cancelAnimationFrame(scoreAnimationRef.current);\n        // eslint-disable-next-line\n        if (percentageAnimationRef.current) cancelAnimationFrame(percentageAnimationRef.current);\n    };\n  }, [score, percentage]);\n\n  if (!quizResult) {\n    return <Typography sx={{p:2, textAlign: 'center'}}>Loading summary...</Typography>;\n  }\n\n  return (\n    <Paper\n      elevation={4}\n      sx={{\n        p: { xs: 2, sm: 3 },\n        mb: 3,\n        textAlign: 'center',\n        borderTop: `5px solid ${effectiveAccentColor}`,\n        borderRadius: theme.shape.borderRadius * 1.5,\n      }}\n    >\n      <Typography\n        variant=\"h4\"\n        component=\"h1\"\n        gutterBottom\n        sx={{\n            color: effectiveAccentColor,\n            fontWeight: 'bold',\n            mb: 1,\n            fontSize: { xs: '1.8rem', sm: '2.125rem' }\n        }}\n      >\n        {quizTitle || (challenge_id ? \"Challenge Results\" : \"Quiz Results\")}\n      </Typography>\n      <Typography\n        variant=\"h6\"\n        component=\"h2\"\n        gutterBottom\n        sx={{\n            textTransform: 'capitalize',\n            color: theme.palette.text.secondary,\n            mb: 2,\n            fontSize: { xs: '1.1rem', sm: '1.25rem' }\n        }}\n      >\n        {/* Use the topicName directly from the quizResult prop */}\n        {topicName || 'N/A'}\n      </Typography>\n\n      <Grid\n        container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ mb: 2 }}\n      >\n        {quizClassFromResult && (\n          <Grid item>\n            <Chip label={`Class ${quizClassFromResult}`} size=\"small\" variant=\"outlined\" sx={{borderColor: effectiveAccentColor, color: effectiveAccentColor}}/>\n          </Grid>\n        )}\n        {difficulty && (\n          <Grid item>\n            <Chip label={difficulty} size=\"small\" variant=\"outlined\" sx={{ textTransform: 'capitalize', borderColor: effectiveAccentColor, color: effectiveAccentColor }} />\n          </Grid>\n        )}\n        {(totalQuestions != null && totalQuestions > 0) && (\n          <Grid item>\n            <Chip label={`${totalQuestions} Qs`} size=\"small\" variant=\"outlined\" sx={{borderColor: effectiveAccentColor, color: effectiveAccentColor}}/>\n          </Grid>\n        )}\n        {timeTaken != null && (\n          <Grid item>\n            <Chip icon={<TimerIcon fontSize=\"small\"/>} label={formatTime(timeTaken)} size=\"small\" variant=\"outlined\" sx={{borderColor: effectiveAccentColor, color: effectiveAccentColor}}/>\n          </Grid>\n        )}\n      </Grid>\n\n      <Divider sx={{ my: 2, borderColor: theme.palette.divider }} />\n\n      <Box sx={{ my: 2.5 }}>\n        <Typography\n            variant=\"h5\"\n            component=\"div\"\n            sx={{\n                fontWeight: 500,\n                mb: 0.5,\n                fontSize: { xs: '1.2rem', sm: '1.5rem' }\n            }}\n        >\n          Your Score:\n          <Typography\n            component=\"span\"\n            variant=\"h3\"\n            sx={{\n                color: effectiveAccentColor,\n                fontWeight: 'bold',\n                ml: 1,\n                fontSize: { xs: '2rem', sm: '2.5rem', md: '3rem' }\n            }}\n          >\n            {animatedScore} / {totalQuestions || 0} {/* Added fallback for totalQuestions */}\n          </Typography>\n        </Typography>\n\n        <Box sx={{ width: '100%', maxWidth: '400px', margin: 'auto', mt: 1, mb: 1.5 }}>\n          <LinearProgress\n            variant=\"determinate\"\n            value={animatedPercentage}\n            sx={{\n              height: 10,\n              borderRadius: 5,\n              backgroundColor: alpha(effectiveAccentColor, 0.2),\n              '& .MuiLinearProgress-bar': {\n                backgroundColor: effectiveAccentColor,\n              }\n            }}\n          />\n          <Typography\n            variant=\"h4\"\n            component=\"div\"\n            sx={{\n                color: effectiveAccentColor,\n                fontWeight: 'bold',\n                mt: 0.5,\n                fontSize: { xs: '1.8rem', sm: '2.125rem', md: '2.5rem' }\n            }}\n          >\n            {animatedPercentage}%\n            {(percentage >= 90 || percentage === 100) &&\n                <EmojiEventsIcon sx={{ color: theme.palette.warning.main, verticalAlign: 'middle', fontSize: {xs: '2rem', sm: '2.5rem'}, ml: 0.5 }} />\n            }\n          </Typography>\n        </Box>\n      </Box>\n    </Paper>\n  );\n}\n\nexport default QuizResultSummary;","// src/components/QuestionBreakdown.js\nimport {\n  Typography, Paper, List, ListItem, ListItemText, ListItemIcon, Divider, useTheme, alpha, Chip, Box\n} from '@mui/material';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '@mui/icons-material/RadioButtonChecked';\nimport MarkdownRenderer from '../shared/MarkdownRenderer'; // <-- IMPORT\n\nfunction QuestionBreakdown({ detailedQuestionsToDisplay }) {\n  const theme = useTheme();\n  const successColor = theme.palette.success.main;\n  const errorColor = theme.palette.error.main;\n  const neutralColor = theme.palette.grey[700];\n\n  if (!detailedQuestionsToDisplay || detailedQuestionsToDisplay.length === 0) {\n    return <Typography sx={{ textAlign: 'center', my: 2 }}>No question breakdown available for this result.</Typography>;\n  }\n\n  return (\n    <>\n      <Typography variant=\"h5\" gutterBottom sx={{ mt: 3, mb: 2, display: 'flex', alignItems: 'center', color: theme.palette.text.primary }}>\n        Detailed Breakdown\n      </Typography>\n      {detailedQuestionsToDisplay.map((result, index) => (\n        <Paper key={result.id || `q-${index}-${Math.random()}`} elevation={2} sx={{ mb: 3, p: { xs: 2, sm: 2.5 }, borderLeft: `4px solid ${result.isCorrect ? successColor : (result.isAnswered ? errorColor : neutralColor)}` }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\n            <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: 500, color: theme.palette.text.primary }}> Question {index + 1} </Typography>\n            {result.isAnswered ? (result.isCorrect ?\n              <Chip icon={<CheckCircleOutlineIcon />} label=\"Correct\" color=\"success\" size=\"small\" variant=\"outlined\" /> :\n              <Chip icon={<HighlightOffIcon />} label=\"Incorrect\" color=\"error\" size=\"small\" variant=\"outlined\" />\n            ) : (<Chip label=\"Not Answered\" size=\"small\" variant=\"outlined\" />)}\n          </Box>\n          <Box sx={{ mb: 2, color: theme.palette.text.primary, whiteSpace: 'pre-wrap' }}>\n            <MarkdownRenderer text={result.text} />\n          </Box>\n\n          {/* Robust check for options before mapping */}\n          {Array.isArray(result.options) && result.options.length > 0 ? (\n            <List dense sx={{ py: 0, mb: result.explanation ? 1.5 : 0 }}>\n              {result.options.map(opt => { // This line (36 in your error) should now be safe\n                const isUserSelected = opt.id === result.userAnswerId;\n                const isCorrectAnswer = opt.id === result.correctOptionId;\n                let optionStyle = {};\n                let icon = <RadioButtonUncheckedIcon fontSize=\"small\" sx={{ color: theme.palette.action.disabled }} />;\n                if (isCorrectAnswer) {\n                  optionStyle = { backgroundColor: alpha(successColor, 0.2), border: `1px solid ${alpha(successColor, 0.4)}`, color: theme.palette.success.light };\n                  icon = <CheckCircleOutlineIcon fontSize=\"small\" sx={{ color: successColor }} />;\n                }\n                if (isUserSelected) {\n                  icon = <RadioButtonCheckedIcon fontSize=\"small\" sx={{ color: isCorrectAnswer ? successColor : errorColor }} />;\n                  if (!isCorrectAnswer) {\n                    optionStyle = { ...optionStyle, backgroundColor: alpha(errorColor, 0.2), border: `1px solid ${alpha(errorColor, 0.4)}`, color: theme.palette.error.light };\n                  } else { optionStyle.fontWeight = 'bold'; } // Keep bold for selected correct\n                }\n                return (\n                  <ListItem key={opt.id} sx={{ my: 0.5, borderRadius: theme.shape.borderRadius, py: 1, px: 1.5, border: `1px solid ${theme.palette.divider}`, transition: 'background-color 0.2s, border-color 0.2s', ...optionStyle }} >\n                    <ListItemIcon sx={{ minWidth: 'auto', mr: 1.5, alignItems: 'center' }}>{icon}</ListItemIcon>\n                    <ListItemText primary={<MarkdownRenderer text={opt.text} />} primaryTypographyProps={{ variant: 'body1', fontWeight: isUserSelected ? 'bold' : 'normal', color: optionStyle.color || theme.palette.text.primary, whiteSpace: 'pre-wrap' }}\n                    />\n                  </ListItem>\n                );\n              })}\n            </List>\n          ) : (\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontStyle: 'italic' }}>Options not available for this question.</Typography>\n          )}\n\n          {result.explanation && (\n            <Paper elevation={0} sx={{ mt: 1.5, p: 1.5, backgroundColor: alpha(theme.palette.info.dark, 0.2), borderRadius: 1 }}>\n              <Typography variant=\"subtitle2\" sx={{ color: theme.palette.info.light, fontWeight: 'bold', mb: 0.5 }}>Explanation:</Typography>\n              <MarkdownRenderer text={result.explanation} />\n            </Paper>\n          )}\n          <Divider sx={{ mt: 2, display: index === detailedQuestionsToDisplay.length - 1 ? 'none' : 'block' }} />\n        </Paper>\n      ))}\n    </>\n  );\n}\n\nexport default QuestionBreakdown;","// src/components/ResultsActionButtons.js\nimport {\n    Box, Button, useTheme, alpha, darken\n} from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport HomeIcon from '@mui/icons-material/Home';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport HistoryIcon from '@mui/icons-material/History'; \n// import SportsKabaddiIcon from '@mui/icons-material/SportsKabaddi'; // Removed\n\nfunction ResultsActionButtons({\n    onBackToList,\n    onNavigateHome,\n    onViewHistory, \n    showBackToListButton,\n    showViewHistoryButton, \n    accentColor,\n    showDeleteButton,\n    onDeleteClick,\n    deleteDisabled,\n    // onChallengeFriend, // Removed\n    // showChallengeButton,  // Removed\n    // currentUser // Removed\n}) {\n    const theme = useTheme();\n    const effectiveAccentColor = accentColor || theme.palette.primary.main;\n\n    return (\n        <Box sx={{ mt: 4, py: 2, display: 'flex', justifyContent: 'space-around', alignItems: 'center', gap: 2, flexWrap: 'wrap' }}>\n            {showBackToListButton && onBackToList && (\n                <Button variant=\"outlined\" startIcon={<ArrowBackIcon />} onClick={onBackToList}\n                    sx={{ borderColor: effectiveAccentColor, color: effectiveAccentColor, '&:hover': { borderColor: darken(effectiveAccentColor, 0.15), backgroundColor: alpha(effectiveAccentColor, 0.08) }, minWidth: {xs: '100%', sm:'180px'} }}\n                > Back to List </Button>\n            )}\n             {showViewHistoryButton && onViewHistory && (\n                <Button variant=\"outlined\" startIcon={<HistoryIcon />} onClick={onViewHistory}\n                    sx={{ \n                        borderColor: theme.palette.info.main, \n                        color: theme.palette.info.main, \n                        '&:hover': { borderColor: darken(theme.palette.info.main, 0.15), backgroundColor: alpha(theme.palette.info.main, 0.08) }, \n                        minWidth: {xs: '100%', sm:'180px'}\n                    }}\n                > View Full History </Button>\n            )}\n            {/* Challenge Friend Button Removed */}\n            <Button variant=\"outlined\" startIcon={<HomeIcon />} onClick={onNavigateHome}\n                sx={{\n                    borderColor: (showBackToListButton || showViewHistoryButton) ? effectiveAccentColor : theme.palette.primary.main,\n                    color: (showBackToListButton || showViewHistoryButton) ? effectiveAccentColor : theme.palette.primary.main,\n                    '&:hover': {\n                        borderColor: darken((showBackToListButton || showViewHistoryButton) ? effectiveAccentColor : theme.palette.primary.main, 0.15),\n                        backgroundColor: alpha((showBackToListButton || showViewHistoryButton) ? effectiveAccentColor : theme.palette.primary.main, 0.08)\n                    },\n                    minWidth: { xs: '100%', sm: '180px' }\n                }}\n            >\n                { (showBackToListButton || showViewHistoryButton /*|| showChallengeButton removed*/) ? \"Home\" : \"Back to Home\"}\n            </Button>\n            {showDeleteButton && onDeleteClick && (\n                <Button\n                    variant=\"outlined\"\n                    color=\"error\"\n                    startIcon={<DeleteIcon />}\n                    onClick={onDeleteClick}\n                    disabled={deleteDisabled}\n                    sx={{ minWidth: {xs: '100%', sm:'180px'} }}\n                >\n                    Delete This Result\n                </Button>\n            )}\n        </Box>\n    );\n}\n\nexport default ResultsActionButtons;","// src/components/results/HistoricalResultDetailView.js\nimport React from 'react';\nimport { Box, CircularProgress, Typography, Alert } from '@mui/material';\nimport QuizResultSummary from './QuizResultSummary'; // Assuming path\nimport QuestionBreakdown from './QuestionBreakdown';\nimport ResultsActionButtons from './ResultsActionButtons';\nimport { subjectAccentColors } from '../../theme'; // Assuming path\n\nfunction HistoricalResultDetailView({\n  selectedResult,\n  detailedQuestions, // This is processedHistoricalDetailedView from parent\n  isLoadingDetails,\n  detailsError,\n  onBackToList,\n  onNavigateHome,\n  onOpenDeleteDialog,\n  onOpenChallengeSetup,\n  currentUser,\n  accentColor // Overall page accent\n}) {\n  if (!selectedResult) return null; // Should not happen if rendered\n\n  const itemAccentColor = subjectAccentColors[selectedResult.subject?.toLowerCase()] || accentColor;\n\n  return (\n    <Box sx={{ p: { xs: 1, sm: 2, md: 3 }, maxWidth: '900px', margin: 'auto', mt: 2 }}>\n      <QuizResultSummary\n        quizResult={selectedResult} // selectedResult should have a pre-formatted topicName\n        quizTitle={selectedResult.challenge_id ? \"Past Challenge Details\" : \"Past Quiz Details\"}\n        accentColor={itemAccentColor}\n      />\n      {isLoadingDetails ? (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"20vh\" sx={{ my: 2 }}>\n          <CircularProgress sx={{ color: itemAccentColor }} />\n          <Typography sx={{ ml: 2 }}>Loading question details...</Typography>\n        </Box>\n      ) : detailsError ? (\n        <Alert severity=\"error\" sx={{ mt: 2 }}>{detailsError}</Alert>\n      ) : detailedQuestions && detailedQuestions.length > 0 ? (\n        <QuestionBreakdown detailedQuestionsToDisplay={detailedQuestions} />\n      ) : (\n        <Alert severity=\"info\" sx={{ mt: 2 }}>\n          No detailed question breakdown available or no questions were attempted for this result.\n        </Alert>\n      )}\n      <ResultsActionButtons\n        onBackToList={onBackToList}\n        onNavigateHome={onNavigateHome}\n        showBackToListButton={true}\n        accentColor={itemAccentColor}\n        showDeleteButton={currentUser && currentUser.id === selectedResult.userId}\n        onDeleteClick={() => onOpenDeleteDialog(selectedResult.id)}\n        deleteDisabled={!selectedResult.id || !(currentUser && currentUser.id === selectedResult.userId)}\n        onChallengeFriend={() => onOpenChallengeSetup(selectedResult)}\n        showChallengeButton={currentUser && !!selectedResult.questionsActuallyAttemptedIds && selectedResult.questionsActuallyAttemptedIds.length > 0 && !selectedResult.challenge_id}\n      />\n    </Box>\n  );\n}\n\nexport default HistoricalResultDetailView;","// src/components/ResultRevealOverlay.js\nimport { useState, useEffect, useRef } from 'react';\nimport { Box, useTheme } from '@mui/material'; // Removed Typography, CircularProgress\nimport AssessmentIcon from '@mui/icons-material/Assessment'; // Or your preferred MUI icon\n\nfunction ResultRevealOverlay({ onAnimationComplete }) {\n  const theme = useTheme();\n  const [isAnimating, setIsAnimating] = useState(false);\n  const animationTimeoutRef = useRef(null);\n\n  // Start animation immediately when the component mounts\n  useEffect(() => {\n    setIsAnimating(true); // Start animation\n\n    animationTimeoutRef.current = setTimeout(() => {\n      // setIsAnimating(false); // Not strictly needed to set to false here as component will unmount\n      onAnimationComplete();\n    }, 2000); // 2-second animation for the fill\n\n    // Cleanup timeout if component unmounts during animation\n    return () => {\n      if (animationTimeoutRef.current) {\n        clearTimeout(animationTimeoutRef.current);\n      }\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onAnimationComplete]); // onAnimationComplete is a stable function from props\n\n  const cardWidth = { xs: '90vw', sm: '80vw', md: '70vw', lg: '60vw' };\n  const cardHeight = { xs: '70vh', sm: '80vh', md: '65vh', lg: '60vh' };\n  const cardMinHeight = '500px';\n\n  const iconSize = { xs: '150px', sm: '200px', md: '250px', lg: '300px' };\n\n  return (\n    <Box\n      sx={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        backgroundColor: 'rgba(0,0,0,0.98)', // Dark overlay\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: theme.zIndex.modal + 10, \n        cursor: 'default', // No longer interactive itself\n      }}\n    >\n      <Box // The \"card\"\n        sx={{\n          width: cardWidth,\n          height: cardHeight,\n          minHeight: cardMinHeight,\n          backgroundColor: 'black', \n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderRadius: theme.shape.borderRadius * 2,\n          boxShadow: theme.shadows[15],\n          padding: theme.spacing(3),\n          textAlign: 'center',\n          position: 'relative', \n          overflow: 'hidden', \n        }}\n      >\n        {/* Icon Container - for stacking and clipping */}\n        <Box\n          sx={{\n            position: 'relative', \n            width: iconSize,\n            height: iconSize,\n            zIndex: 2, \n          }}\n        >\n          {/* Bottom/Background Icon (Dark Grey - this will be covered) */}\n          <AssessmentIcon \n            sx={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              fontSize: 'inherit', // Inherits size from parent Box\n              color: theme.palette.grey[800], // Dark grey, subtly visible on black\n            }}\n          />\n          {/* Top/Foreground Icon (White, Clipped & Animated) */}\n          <AssessmentIcon \n            sx={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              fontSize: 'inherit',\n              color: theme.palette.common.white,\n              // Animation starts because isAnimating is true on mount\n              clipPath: isAnimating ? 'inset(0% 0 0 0)' : 'inset(100% 0 0 0)', \n              transition: 'clip-path 1.8s cubic-bezier(0.4, 0, 0.2, 1)', \n            }}\n          />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default ResultRevealOverlay;","// src/pages/ResultsPage.js\nimport { Box, Button, Typography, useTheme, darken, CircularProgress, Paper, Alert } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport HistoryIcon from '@mui/icons-material/History';\nimport LoginIcon from '@mui/icons-material/Login';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useResults } from '../hooks/useResults';\n\nimport HistoricalResultsList from '../components/results/HistoricalResultsList';\nimport HistoricalResultDetailView from '../components/results/HistoricalResultDetailView';\nimport ResultRevealOverlay from '../components/results/ResultRevealOverlay';\nimport DeleteConfirmationDialog from '../components/shared/DeleteConfirmationDialog';\nimport ChallengeSetupModal from '../components/challenges/ChallengeSetupModal';\nimport { subjectAccentColors } from '../theme';\n\nfunction ResultsPage() {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { isLoadingAuth } = useAuth();\n\n  const {\n    currentUser, view, isLoading, error, detailData, historicalList,\n    showAnimation, handleAnimationComplete,\n    deleteConfirmationOpen, deleteError, challengeSetupModalOpen, quizDataForChallenge,\n    handleBackToList, handleNavigateHome, openDeleteConfirmation, closeDeleteConfirmation,\n    handleConfirmDelete, handleOpenChallengeSetup, handleCloseChallengeSetupModal\n  } = useResults();\n  \n  const RESULTS_PAGE_ACCENT_COLOR = theme.palette.resultsAccent?.main || theme.palette.info.main;\n\n  const renderContent = () => {\n    if (isLoadingAuth || view === 'loading') {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"calc(100vh - 200px)\">\n          <CircularProgress sx={{ color: RESULTS_PAGE_ACCENT_COLOR }} />\n        </Box>\n      );\n    }\n    \n    if (view === 'error') {\n        return (\n            <Box textAlign=\"center\" mt={4}>\n                <Alert severity=\"error\">{error || \"An unknown error occurred.\"}</Alert>\n                <Button variant=\"outlined\" onClick={handleBackToList} sx={{mt: 2}}>Go Back to Results List</Button>\n            </Box>\n        );\n    }\n\n    if (view === 'detail' && detailData) {\n      return (\n        <HistoricalResultDetailView\n          selectedResult={detailData.result}\n          detailedQuestions={detailData.detailedQuestions}\n          isLoadingDetails={isLoading}\n          detailsError={error}\n          onBackToList={handleBackToList}\n          onNavigateHome={handleNavigateHome}\n          onOpenDeleteDialog={openDeleteConfirmation}\n          onOpenChallengeSetup={() => handleOpenChallengeSetup(detailData.result)}\n          currentUser={currentUser}\n          accentColor={RESULTS_PAGE_ACCENT_COLOR}\n        />\n      );\n    }\n    \n    if (view === 'list') {\n        return (\n            <>\n                <Typography variant=\"h4\" gutterBottom sx={{ mb: 2, textAlign: 'center', color: RESULTS_PAGE_ACCENT_COLOR, fontWeight: 'bold' }}>\n                    <HistoryIcon sx={{ verticalAlign: 'middle', mr: 1, fontSize: '1.3em' }} />\n                    {currentUser ? `${currentUser.name}'s Quiz History` : 'Quiz History'}\n                </Typography>\n                {!currentUser ? (\n                    <Paper elevation={2} sx={{ p: 3, textAlign: 'center', mt: 3, borderTop: `5px solid ${RESULTS_PAGE_ACCENT_COLOR}` }}>\n                        <Typography variant=\"h6\" gutterBottom>Access Your Quiz History</Typography>\n                        <Typography sx={{ mb: 2 }}>Please log in to view your saved results.</Typography>\n                        <Button variant=\"contained\" startIcon={<LoginIcon />} onClick={() => navigate('/login')} sx={{ backgroundColor: RESULTS_PAGE_ACCENT_COLOR, '&:hover': { backgroundColor: darken(RESULTS_PAGE_ACCENT_COLOR, 0.2) } }} >\n                            Login / Register\n                        </Button>\n                    </Paper>\n                ) : (\n                    <HistoricalResultsList\n                        results={historicalList}\n                        isLoading={isLoading}\n                        error={error}\n                        deleteError={deleteError}\n                        onDeleteClick={openDeleteConfirmation}\n                        currentUser={currentUser}\n                        accentColor={RESULTS_PAGE_ACCENT_COLOR}\n                    />\n                )}\n            </>\n        );\n    }\n\n    return null;\n  };\n\n  return (\n    <>\n      {showAnimation && <ResultRevealOverlay onAnimationComplete={handleAnimationComplete} />}\n\n      <Box sx={{ p: { xs: 1, sm: 2, md: 3 }, margin: 'auto', mt: 2, visibility: showAnimation ? 'hidden' : 'visible' }}>\n        {renderContent()}\n      </Box>\n\n      <DeleteConfirmationDialog\n        open={deleteConfirmationOpen}\n        onClose={closeDeleteConfirmation}\n        onConfirm={handleConfirmDelete}\n        title=\"Confirm Deletion\"\n        message={`Are you sure you want to permanently delete this quiz result? This action cannot be undone.`}\n        error={deleteError}\n      />\n\n      {quizDataForChallenge && (\n        <ChallengeSetupModal\n          open={challengeSetupModalOpen}\n          onClose={handleCloseChallengeSetupModal}\n          currentUser={currentUser}\n          quizDataForChallenge={quizDataForChallenge}\n          accentColor={subjectAccentColors[quizDataForChallenge.subject?.toLowerCase()] || theme.palette.secondary.main}\n        />\n      )}\n    </>\n  );\n}\n\nexport default ResultsPage;","// src/hooks/useResults.js\nimport { useState, useEffect, useCallback } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport apiClient from '../api/axiosInstance';\nimport { useAuth } from '../contexts/AuthContext';\nimport { parseQuestionOptions as parseQuestionOptionsForResults, formatDisplayTopicName } from '../utils/quizUtils';\n\nexport const useResults = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { resultId } = useParams();\n  const { currentUser } = useAuth();\n  \n  const [view, setView] = useState('loading');\n  const [detailData, setDetailData] = useState(null);\n  const [historicalList, setHistoricalList] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [showAnimation, setShowAnimation] = useState(location.state?.isFirstResultView === true);\n\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n  const [resultToDeleteId, setResultToDeleteId] = useState(null);\n  const [deleteError, setDeleteError] = useState('');\n  const [challengeSetupModalOpen, setChallengeSetupModalOpen] = useState(false);\n  const [quizDataForChallenge, setQuizDataForChallenge] = useState(null);\n\n  const fetchResultById = useCallback(async (id) => {\n    setIsLoading(true);\n    setError('');\n    try {\n        if (!currentUser?.token) throw new Error(\"Authentication required to view saved results.\");\n        const response = await apiClient.get(`/api/results`, { headers: { Authorization: `Bearer ${currentUser.token}` } });\n        const allResults = response.data || [];\n        const foundResult = allResults.find(r => String(r.id) === String(id));\n        if (!foundResult) throw new Error(`Result with ID ${id} not found or you do not have permission to view it.`);\n        \n        // Use the new subject-aware topic endpoint if available, otherwise fallback\n        const questionsResponse = await apiClient.get(`/api/questions?topicId=${foundResult.topicId}`);\n        const allTopicQuestions = parseQuestionOptionsForResults(questionsResponse.data || []);\n        \n        const populatedQuestions = (foundResult.questionsActuallyAttemptedIds || []).map(qId => {\n            const fullData = allTopicQuestions.find(q => q.id === qId) || { id: qId, text: `Question data (ID: ${qId}) not found.`, options: []};\n            const userAnswerId = foundResult.userAnswersSnapshot ? foundResult.userAnswersSnapshot[qId] : null;\n            return { ...fullData, userAnswerId, isCorrect: userAnswerId === fullData.correctOptionId, isAnswered: !!userAnswerId };\n        });\n\n        setDetailData({\n            result: {...foundResult, topicName: formatDisplayTopicName(foundResult.topicId, foundResult.topicName, !!foundResult.challenge_id, foundResult)},\n            detailedQuestions: populatedQuestions\n        });\n        setView('detail');\n    } catch (err) {\n        setError(err.message);\n        setView('error');\n    } finally {\n        setIsLoading(false);\n    }\n  }, [currentUser?.token]);\n  \n  const fetchHistoricalList = useCallback(async () => {\n    if (!currentUser?.token) { setIsLoading(false); setView('list'); setHistoricalList([]); return; }\n    setIsLoading(true);\n    setError('');\n    try {\n        const response = await apiClient.get(`/api/results?userId=${currentUser.id}`, { headers: { Authorization: `Bearer ${currentUser.token}` } });\n        setHistoricalList((response.data || []).map(r => ({ ...r, topicName: formatDisplayTopicName(r.topicId, r.topicName, !!r.challenge_id, r) })));\n        setView('list');\n    } catch (err) {\n        setError(err.message);\n        setHistoricalList([]);\n        setView('error');\n    } finally {\n        setIsLoading(false);\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    const stateData = location.state;\n\n    if (stateData && stateData.originalQuestionsForDisplay) {\n        setShowAnimation(stateData.isFirstResultView === true);\n        \n        setDetailData({\n            result: { ...stateData, topicName: formatDisplayTopicName(stateData.topicId, stateData.topicName, stateData.isChallenge, stateData.challengeDetails) },\n            detailedQuestions: (stateData.originalQuestionsForDisplay || []).map(q => ({...q, userAnswerId: stateData.originalAnswersForDisplay[q.id], isCorrect: stateData.originalAnswersForDisplay[q.id] === q.correctOptionId, isAnswered: !!stateData.originalAnswersForDisplay[q.id]}))\n        });\n        setView('detail');\n        setIsLoading(false);\n    } \n    else if (resultId) {\n        fetchResultById(resultId);\n    } \n    else {\n        fetchHistoricalList();\n    }\n  }, [resultId, location.state, fetchResultById, fetchHistoricalList]);\n\n  const handleAnimationComplete = () => {\n    setShowAnimation(false);\n    if (location.state) {\n        navigate(location.pathname, { state: { ...location.state, isFirstResultView: false }, replace: true });\n    }\n  };\n\n  const handleBackToList = () => navigate('/results', { replace: true });\n  const handleNavigateHome = () => navigate('/');\n  const openDeleteConfirmation = (id) => { setResultToDeleteId(id); setDeleteConfirmationOpen(true); };\n  const closeDeleteConfirmation = () => { setDeleteConfirmationOpen(false); setDeleteError(''); };\n  const handleConfirmDelete = async () => { if (!resultToDeleteId || !currentUser?.token) return; try { await apiClient.delete(`/api/results/${resultToDeleteId}`, { headers: { Authorization: `Bearer ${currentUser.token}` } }); closeDeleteConfirmation(); handleBackToList(); } catch (err) { setDeleteError(err.response?.data?.message || \"Failed to delete result.\"); } };\n  const handleOpenChallengeSetup = (sourceResult) => { const questionIds = Array.isArray(sourceResult.originalQuestionsForDisplay) ? sourceResult.originalQuestionsForDisplay.map(q => q.id) : sourceResult.questionsActuallyAttemptedIds; if (!questionIds?.length) { alert(\"No questions found to base a challenge on.\"); return; } setQuizDataForChallenge({ topicId: sourceResult.topicId, topicName: formatDisplayTopicName(sourceResult.topicId, sourceResult.topicName, !!sourceResult.challenge_id, sourceResult), difficulty: sourceResult.difficulty, numQuestions: questionIds.length, quizClass: sourceResult.class || sourceResult.quizClass, questionIds: questionIds, subject: sourceResult.subject }); setChallengeSetupModalOpen(true); };\n  const handleCloseChallengeSetupModal = () => setChallengeSetupModalOpen(false);\n\n  return {\n    currentUser, view, isLoading, error, detailData, historicalList,\n    showAnimation, handleAnimationComplete,\n    deleteConfirmationOpen, deleteError, challengeSetupModalOpen, quizDataForChallenge,\n    handleBackToList, handleNavigateHome, openDeleteConfirmation, closeDeleteConfirmation,\n    handleConfirmDelete, handleOpenChallengeSetup, handleCloseChallengeSetupModal,\n  };\n};","// src/utils/quizUtils.js\n\n/**\n * Parses the 'options' field of question objects within an array.\n * If 'options' is a JSON string, it's parsed into an array.\n * If it's already an array, it's returned as is.\n * Handles potential parsing errors.\n * @param {Array<Object>} questionsArray - An array of question objects.\n * @returns {Array<Object>} The array of question objects with 'options' as arrays.\n */\nexport const parseQuestionOptions = (questionsArray) => {\n  if (!Array.isArray(questionsArray)) {\n    console.warn(\"[quizUtils] parseQuestionOptions received non-array input:\", questionsArray);\n    return [];\n  }\n  return questionsArray.map(q => {\n    if (!q || typeof q !== 'object') {\n        console.warn(\"[quizUtils] Encountered invalid item in questionsArray:\", q);\n        return q;\n    }\n    let parsedOptions = [];\n    if (typeof q.options === 'string') {\n      try {\n        parsedOptions = JSON.parse(q.options);\n        if (!Array.isArray(parsedOptions)) {\n            console.warn(`[quizUtils] Parsed options for Q ID ${q.id} is not an array:`, parsedOptions);\n            parsedOptions = [];\n        }\n      } catch (e) {\n        console.error(`[quizUtils] Failed to parse options for question ID ${q.id}:`, q.options, e);\n      }\n    } else if (Array.isArray(q.options)) {\n      parsedOptions = q.options;\n    } else if (q.options !== undefined && q.options !== null) {\n      console.warn(`[quizUtils] Question ID ${q.id} has unexpected options format (not string or array):`, q.options);\n    }\n    return { ...q, options: parsedOptions };\n  });\n};\n\n/**\n * Formats a topic name for display based on its ID and other optional details.\n * @param {string} topicId - The ID of the topic.\n * @param {string|null} topicNameFromState - A pre-formatted name, if available.\n * @param {boolean} isChallenge - Whether this is for a challenge result.\n * @param {Object|null} challengeDetails - Details of the challenge, if applicable.\n * @returns {string} The formatted topic name.\n */\nexport const formatDisplayTopicName = (topicId, topicNameFromState = null, isChallenge = false, challengeDetails = null) => {\n  // ... (your existing formatDisplayTopicName logic from previous step)\n  if (isChallenge && challengeDetails?.topic_name) return `Challenge: ${challengeDetails.topic_name}`;\n  if (isChallenge && topicNameFromState) return `Challenge: ${topicNameFromState}`;\n  if (isChallenge) return `Challenge: ${topicId ? String(topicId).replace(/-/g, ' ') : 'Quiz'}`;\n  if (topicNameFromState && topicId && topicNameFromState !== String(topicId).replace(/-/g, ' ')) { return topicNameFromState; }\n  if (!topicId) return 'N/A';\n  let name = String(topicId).replace(/-/g, ' ');\n  name = name.replace(/^homibhabha practice /i, 'Homi Bhabha Practice - ');\n  name = name.replace(/^pyq /i, 'PYQ ');\n  const classSuffixRegex = /\\s(\\d+(?:st|nd|rd|th))$/i;\n  name = name.replace(classSuffixRegex, (match, p1) => ` - Class ${p1.toUpperCase()}`).trim();\n  name = name.split(' ').map(word => {\n    if (word.toLowerCase() === 'class' || word.toLowerCase() === 'std') return word;\n    if (word.includes('-')) { return word.split('-').map(part => part.charAt(0).toUpperCase() + part.slice(1).toLowerCase()).join('-'); }\n    return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase(); }).join(' ');\n  name = name.replace(/Homi Bhabha Practice - (\\w+) (\\w+)/i, (match, quizClass, difficulty) => `Homi Bhabha Practice - Std ${quizClass} (${difficulty.charAt(0).toUpperCase() + difficulty.slice(1)})`);\n  name = name.replace(/Pyq (\\w+) (\\d+)/i, (match, quizClass, year) => `PYQ - Std ${quizClass} (${year})`);\n  name = name.replace(/Pyq - Class (\\w+) \\((\\d+)\\)/i, (match, quizClass, year) => `PYQ - Std ${quizClass} (${year})`);\n  return name;\n};\n\n/**\n * Shuffles an array in place using the Fisher-Yates algorithm.\n * @param {Array} array - The array to shuffle.\n * @returns {Array} The shuffled array (same instance, modified in place, but also returned).\n */\nexport const shuffleArray = (array) => {\n  if (!array || !Array.isArray(array)) return [];\n  let currentIndex = array.length, randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n  return array; // Returns the same array instance, now shuffled\n};","import {\n  Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Alert, useTheme\n} from '@mui/material';\n\nfunction DeleteConfirmationDialog({ open, onClose, onConfirm, error }) {\n  const theme = useTheme();\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"delete-confirmation-title\">\n      <DialogTitle id=\"delete-confirmation-title\">Confirm Deletion</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure you want to delete this quiz result? This action cannot be undone.\n        </DialogContentText>\n        {error && <Alert severity=\"error\" sx={{ mt: 2 }} variant=\"filled\">{error}</Alert>}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} sx={{ color: theme.palette.text.secondary }}>Cancel</Button>\n        <Button onClick={onConfirm} color=\"error\" autoFocus>\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default DeleteConfirmationDialog;"],"names":["_ref","text","_jsx","ReactMarkdown","remarkPlugins","remarkMath","rehypePlugins","rehypeKatex","components","p","_ref2","node","props","_objectWithoutProperties","_excluded","Typography","_objectSpread","variant","component","sx","mt","mb","a","_ref3","_excluded2","MuiLink","children","formatTime","totalSeconds","hours","Math","floor","minutes","seconds","paddedHours","String","padStart","paddedMinutes","paddedSeconds","concat","_quizDataForChallenge","open","onClose","currentUser","quizDataForChallenge","accentColor","theme","useTheme","friendsList","setFriendsList","useState","isLoadingFriends","setIsLoadingFriends","selectedFriendId","setSelectedFriendId","error","setError","successMessage","setSuccessMessage","isSubmitting","setIsSubmitting","effectiveAccentColor","palette","secondary","main","fetchFriends","useCallback","async","token","response","apiClient","get","headers","Authorization","data","err","console","useEffect","_jsxs","Dialog","PaperProps","minWidth","maxWidth","DialogTitle","backgroundColor","color","getContrastText","pb","pt","DialogContent","display","flexDirection","gap","gutterBottom","Box","pl","borderLeft","topicName","difficulty","questionIds","length","quizClass","subject","CircularProgress","alignSelf","FormControl","fullWidth","margin","disabled","InputLabel","id","Select","labelId","value","label","onChange","e","target","MenuProps","background","paper","MenuItem","map","friend","friendId","friendUsername","Alert","severity","DialogActions","Button","onClick","payload","challenged_friend_id","topic_id","topicId","topic_name","num_questions","quiz_class","question_ids_json","JSON","stringify","post","message","setTimeout","_err$response","_err$response$data","darken","startIcon","size","SportsKabaddiIcon","_result$subject","result","onDeleteClick","showDeleteButton","isChallengeResult","navigate","useNavigate","formatDisplayTopicName","itemAccentColor","subjectAccentColors","toLowerCase","grey","Paper","handleResultClick","height","borderRadius","cursor","transition","transform","boxShadow","shadows","alpha","action","hover","elevation","flexGrow","Stack","direction","spacing","alignItems","fontSize","textTransform","fontWeight","lineHeight","flexWrap","class","Chip","Date","timestamp","toLocaleDateString","justifyContent","borderTop","divider","score","totalQuestions","percentage","success","warning","Tooltip","title","IconButton","stopPropagation","light","DeleteIcon","results","isLoading","deleteError","Grid","container","width","xs","sm","md","lg","xl","item","HistoricalResultItem","userId","challenge_id","textAlign","HomeIcon","augmentColor","dark","quizResult","quizTitle","primary","quizClassFromResult","timeTaken","animatedScore","setAnimatedScore","animatedPercentage","setAnimatedPercentage","scoreAnimationRef","useRef","percentageAnimationRef","undefined","scoreTarget","max","percentageTarget","min","animateValue","startValue","endValue","duration","setter","animationRef","startTime","step","progress","easedProgress","pow","current","requestAnimationFrame","cancelAnimationFrame","shape","borderColor","icon","TimerIcon","Divider","my","ml","LinearProgress","EmojiEventsIcon","verticalAlign","detailedQuestionsToDisplay","successColor","errorColor","neutralColor","_Fragment","index","isCorrect","isAnswered","CheckCircleOutlineIcon","HighlightOffIcon","whiteSpace","MarkdownRenderer","Array","isArray","options","List","dense","py","explanation","opt","isUserSelected","userAnswerId","isCorrectAnswer","correctOptionId","optionStyle","RadioButtonUncheckedIcon","border","RadioButtonCheckedIcon","ListItem","px","ListItemIcon","mr","ListItemText","primaryTypographyProps","fontStyle","info","random","onBackToList","onNavigateHome","onViewHistory","showBackToListButton","showViewHistoryButton","deleteDisabled","ArrowBackIcon","HistoryIcon","_selectedResult$subje","selectedResult","detailedQuestions","isLoadingDetails","detailsError","onOpenDeleteDialog","onOpenChallengeSetup","QuizResultSummary","minHeight","QuestionBreakdown","ResultsActionButtons","onChallengeFriend","showChallengeButton","questionsActuallyAttemptedIds","onAnimationComplete","isAnimating","setIsAnimating","animationTimeoutRef","clearTimeout","iconSize","position","top","left","zIndex","modal","padding","overflow","AssessmentIcon","common","white","clipPath","_theme$palette$result","isLoadingAuth","useAuth","view","detailData","historicalList","showAnimation","handleAnimationComplete","deleteConfirmationOpen","challengeSetupModalOpen","handleBackToList","handleNavigateHome","openDeleteConfirmation","closeDeleteConfirmation","handleConfirmDelete","handleOpenChallengeSetup","handleCloseChallengeSetupModal","useResults","_location$state","location","useLocation","resultId","useParams","setView","setDetailData","setHistoricalList","setIsLoading","setShowAnimation","state","isFirstResultView","setDeleteConfirmationOpen","resultToDeleteId","setResultToDeleteId","setDeleteError","setChallengeSetupModalOpen","setQuizDataForChallenge","fetchResultById","Error","foundResult","find","r","questionsResponse","allTopicQuestions","parseQuestionOptionsForResults","populatedQuestions","qId","fullData","q","userAnswersSnapshot","fetchHistoricalList","stateData","originalQuestionsForDisplay","isChallenge","challengeDetails","originalAnswersForDisplay","replace","pathname","delete","sourceResult","numQuestions","alert","RESULTS_PAGE_ACCENT_COLOR","resultsAccent","ResultRevealOverlay","visibility","HistoricalResultDetailView","name","HistoricalResultsList","LoginIcon","DeleteConfirmationDialog","onConfirm","ChallengeSetupModal","parseQuestionOptions","questionsArray","warn","parsedOptions","parse","topicNameFromState","arguments","match","p1","toUpperCase","trim","split","word","includes","part","charAt","slice","join","year","shuffleArray","array","randomIndex","currentIndex","DialogContentText","autoFocus"],"sourceRoot":""}