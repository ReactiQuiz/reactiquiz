{"version":3,"file":"static/js/34.c8c2a8c1.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/PersonAdd.js","components/auth/RegisterForm.js","pages/RegisterPage.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m-9-2V7H4v3H1v2h3v3h2v-3h3v-2zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'PersonAdd');","// src/components/auth/RegisterForm.js\nimport React from 'react';\nimport { Box, TextField, Button, Alert, CircularProgress, Typography, Link as MuiLink } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\n\nfunction RegisterForm({\n  formError,\n  successMessage,\n  isSubmitting,\n  identifier, setIdentifier,\n  email, setEmail,\n  password, setPassword,\n  confirmPassword, setConfirmPassword,\n  address, setAddress,\n  userClass, setUserClass,\n  onRegisterSubmit,\n  accentColor,\n}) {\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onRegisterSubmit();\n  }\n\n  return (\n    <Box>\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n        <TextField margin=\"normal\" required fullWidth id=\"register-identifier\" label=\"Username\" name=\"registerIdentifier\"\n          autoComplete=\"username\" autoFocus value={identifier} onChange={(e) => setIdentifier(e.target.value)} error={!!formError}\n        />\n        <TextField margin=\"normal\" required fullWidth id=\"register-email\" label=\"Email Address\" name=\"registerEmail\"\n          type=\"email\" autoComplete=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} error={!!formError}\n        />\n        <TextField margin=\"normal\" required fullWidth name=\"registerPassword\" label=\"Password (min. 6 chars)\"\n          type=\"password\" id=\"register-password\" value={password} onChange={(e) => setPassword(e.target.value)} error={!!formError}\n        />\n        <TextField margin=\"normal\" required fullWidth name=\"registerConfirmPassword\" label=\"Confirm Password\"\n          type=\"password\" id=\"register-confirm-password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}\n          error={!!formError || (password !== confirmPassword && confirmPassword.length > 0)}\n          helperText={password !== confirmPassword && confirmPassword.length > 0 ? \"Passwords do not match\" : \"\"}\n        />\n        <TextField margin=\"normal\" required fullWidth id=\"register-address\" label=\"Address\" name=\"registerAddress\"\n          autoComplete=\"street-address\" value={address} onChange={(e) => setAddress(e.target.value)} error={!!formError}\n        />\n        <TextField margin=\"normal\" required fullWidth id=\"register-class\" label=\"Class (e.g., 6-12)\" name=\"registerClass\"\n          type=\"number\" value={userClass} onChange={(e) => setUserClass(e.target.value)} error={!!formError}\n        />\n        {formError && <Alert severity=\"error\" sx={{ mt: 2 }}>{formError}</Alert>}\n        {successMessage && <Alert severity=\"success\" sx={{ mt: 2 }}>{successMessage}</Alert>}\n        <Button type=\"submit\" fullWidth variant=\"contained\" disabled={isSubmitting}\n          sx={{ mt: 2, mb: 1, py: 1.5, backgroundColor: accentColor, '&:hover': { backgroundColor: (theme) => theme.palette.augmentColor({ color: { main: accentColor } }).dark } }}\n          startIcon={isSubmitting ? <CircularProgress size={20} color=\"inherit\" /> : <PersonAddIcon />}\n        >\n          {isSubmitting ? 'Creating Account...' : 'Sign Up'}\n        </Button>\n      </Box>\n      <Typography variant=\"body2\" sx={{ mt: 3, textAlign: 'center' }}>\n        Already have an account?{' '}\n        <MuiLink component={RouterLink} to=\"/login\" variant=\"body2\" sx={{ fontWeight: 'bold' }}>\n          Sign In\n        </MuiLink>\n      </Typography>\n    </Box>\n  );\n}\n\nexport default RegisterForm;","// src/pages/RegisterPage.js\r\nimport { Box, Paper, useTheme, Grid, Typography } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { useAuthForms } from '../hooks/useAuthForms';\r\nimport RegisterForm from '../components/auth/RegisterForm';\r\nimport AuthBrandingPanel from '../components/auth/AuthBrandingPanel';\r\n\r\nfunction RegisterPage() {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    formError, successMessage, isSubmitting,\r\n    registerIdentifier, setRegisterIdentifier,\r\n    registerEmail, setRegisterEmail,\r\n    registerPassword, setRegisterPassword,\r\n    registerConfirmPassword, setRegisterConfirmPassword,\r\n    registerAddress, setRegisterAddress,\r\n    registerClass, setUserClass,\r\n    handleRegisterSubmit,\r\n  } = useAuthForms();\r\n\r\n  const handleRegistrationSuccess = () => {\r\n    navigate('/login', {\r\n      state: { message: 'Registration successful! Please log in to continue.' }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" sx={{ height: '100%', flexGrow: 1 }}>\r\n      {/* Left Form Panel */}\r\n      <Grid\r\n        item\r\n        square\r\n        width={{\r\n          xs: \"100%\",\r\n          sx: \"60%\",\r\n          md: \"50%\",\r\n          lg: \"35%\",\r\n          xl: \"40%\"\r\n        }}\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            my: { xs: 4, sm: 8 },\r\n            mx: { xs: 2, sm: 4 },\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            width: '100%'\r\n          }}\r\n        >\r\n          <Box sx={{ width: '100%', maxWidth: '450px' }}>\r\n            <Typography component=\"h1\" variant=\"h4\" sx={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n              Create Your Account\r\n            </Typography>\r\n            <RegisterForm\r\n              formError={formError}\r\n              successMessage={successMessage}\r\n              isSubmitting={isSubmitting}\r\n              identifier={registerIdentifier} setIdentifier={setRegisterIdentifier}\r\n              email={registerEmail} setEmail={setRegisterEmail}\r\n              password={registerPassword} setPassword={setRegisterPassword}\r\n              confirmPassword={registerConfirmPassword} setConfirmPassword={setRegisterConfirmPassword}\r\n              address={registerAddress} setAddress={setRegisterAddress}\r\n              userClass={registerClass} setUserClass={setUserClass}\r\n              onRegisterSubmit={() => handleRegisterSubmit(handleRegistrationSuccess)}\r\n              accentColor={theme.palette.primary.main}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n\r\n      {/* Right Branding Panel */}\r\n      <Grid\r\n        item\r\n        width={{\r\n          xs: \"0%\",\r\n          sx: \"40%\",\r\n          md: \"50%\",\r\n          lg: \"65%\",\r\n          xl: \"60%\"\r\n        }}\r\n      >\r\n        <AuthBrandingPanel variant=\"register\" />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;"],"names":["createSvgIcon","_jsx","d","_ref","formError","successMessage","isSubmitting","identifier","setIdentifier","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","address","setAddress","userClass","setUserClass","onRegisterSubmit","accentColor","_jsxs","Box","children","component","onSubmit","e","preventDefault","noValidate","sx","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","error","type","length","helperText","Alert","severity","Button","variant","disabled","mb","py","backgroundColor","theme","palette","augmentColor","color","main","dark","startIcon","CircularProgress","size","PersonAddIcon","Typography","textAlign","MuiLink","RouterLink","to","fontWeight","useTheme","navigate","useNavigate","registerIdentifier","setRegisterIdentifier","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","registerConfirmPassword","setRegisterConfirmPassword","registerAddress","setRegisterAddress","registerClass","handleRegisterSubmit","useAuthForms","handleRegistrationSuccess","state","message","Grid","container","height","flexGrow","item","square","width","xs","md","lg","xl","display","alignItems","justifyContent","my","sm","mx","flexDirection","maxWidth","RegisterForm","primary","AuthBrandingPanel"],"sourceRoot":""}