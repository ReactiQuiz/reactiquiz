{"version":3,"file":"static/js/422.8aaf2b45.chunk.js","mappings":"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","sources":["components/auth/ChangeDetailsModal.js","components/account/UserProfileCard.js","components/account/AccountManagementActions.js","components/account/UserActivityChart.js","pages/AccountPage.js","hooks/useAccount.js"],"sourcesContent":["// src/components/ChangeDetailsModal.js\nimport { useState, useEffect } from 'react';\nimport {\n  Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField,\n  Box, useTheme, Alert, CircularProgress, Typography, FormControl, InputLabel, Select, MenuItem\n} from '@mui/material';\nimport { darken } from '@mui/material/styles';\nimport EditNoteIcon from '@mui/icons-material/EditNote';\nimport apiClient from '../../api/axiosInstance';\n\nconst CLASS_OPTIONS = ['6', '7', '8', '9', '10', '11', '12'];\n\nfunction ChangeDetailsModal({ open, onClose, currentUser, setCurrentUser }) {\n  const theme = useTheme();\n  const ACCENT_COLOR = theme.palette.accountAccent?.main || theme.palette.primary.main;\n\n  const [formData, setFormData] = useState({\n    identifier: '', // Will be display-only\n    email: '',      // Will be display-only\n    address: '',\n    class: ''\n  });\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (currentUser && open) {\n      setFormData({\n        identifier: currentUser.name || '',\n        email: currentUser.email || '',\n        address: currentUser.address || '',\n        class: String(currentUser.class || '') // Ensure class is a string for Select\n      });\n      setError('');\n      setSuccessMessage('');\n    }\n  }, [currentUser, open]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    setError('');\n    setSuccessMessage('');\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setError('');\n    setSuccessMessage('');\n\n    // Identifier and email are not changeable, so not validated here for emptiness.\n    // They are pre-filled and disabled.\n    if (!formData.address.trim() || !String(formData.class).trim()) {\n      setError('Address and Class fields are required.');\n      return;\n    }\n     if (!CLASS_OPTIONS.includes(String(formData.class))) {\n        setError('Please select a valid class from the dropdown.');\n        return;\n    }\n\n\n    setIsSubmitting(true);\n    try {\n      // IMPORTANT: Backend should only update address and class\n      const payload = {\n        address: formData.address.trim(),\n        class: parseInt(formData.class)\n      };\n      // The identifier/email might be needed by backend to find the user,\n      // but they should not be updatable through this payload.\n      // Alternatively, the backend uses the token to identify the user.\n\n      const response = await apiClient.put('/api/users/update-details', payload, {\n        headers: { Authorization: `Bearer ${currentUser.token}` }\n      });\n\n      setSuccessMessage(response.data.message || 'Details updated successfully!');\n      \n      if (response.data.user && setCurrentUser) {\n          setCurrentUser(prevUser => ({\n              ...prevUser,\n              // name and email remain unchanged from prevUser as they are not submitted for update\n              address: response.data.user.address, // Assuming backend returns updated user\n              class: response.data.user.class,\n          }));\n          const updatedUserForStorage = {\n              id: currentUser.id,\n              name: currentUser.name, // Keep original identifier/name\n              email: currentUser.email, // Keep original email\n              address: response.data.user.address,\n              class: response.data.user.class,\n          };\n          localStorage.setItem('reactiquizUser', JSON.stringify(updatedUserForStorage));\n      }\n\n      setTimeout(() => {\n        onClose();\n      }, 2000);\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to update details. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleClose = () => {\n    setError('');\n    setSuccessMessage('');\n    // Reset formData to current user's details when closing without submitting\n    // or rely on useEffect to reset on next open.\n    // For now, just closing.\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose} PaperProps={{ sx: { minWidth: { xs: '90%', sm: '450px' } } }}>\n      <DialogTitle sx={{ backgroundColor: ACCENT_COLOR, color: theme.palette.getContrastText(ACCENT_COLOR), pb: 1.5, pt: 2, textAlign: 'center' }}>\n        <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          <EditNoteIcon sx={{mr: 1}}/>\n          Change Your Details\n        </Box>\n      </DialogTitle>\n      <DialogContent sx={{ pt: '20px !important' }}>\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{mb:1}}>\n            Update your address and class. Username and email cannot be changed here.\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            id=\"identifier-display\"\n            label=\"Username/Identifier\"\n            name=\"identifier\"\n            value={formData.identifier}\n            disabled // Make this field read-only\n            InputLabelProps={{ shrink: true }} // Ensures label doesn't overlap pre-filled value\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            id=\"email-display\"\n            label=\"Email Address\"\n            name=\"email\"\n            type=\"email\"\n            value={formData.email}\n            disabled // Make this field read-only\n            InputLabelProps={{ shrink: true }}\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"address-change\"\n            label=\"Address\"\n            name=\"address\"\n            autoComplete=\"street-address\"\n            multiline\n            rows={2}\n            value={formData.address}\n            onChange={handleInputChange}\n            error={!!error && error.toLowerCase().includes(\"address\")}\n            InputLabelProps={{ shrink: !!formData.address }}\n          />\n          <FormControl fullWidth margin=\"normal\" required error={!!error && error.toLowerCase().includes(\"class\")}>\n            <InputLabel id=\"class-select-label\">Class</InputLabel>\n            <Select\n              labelId=\"class-select-label\"\n              id=\"class-change-select\"\n              name=\"class\"\n              value={formData.class}\n              label=\"Class\"\n              onChange={handleInputChange}\n            >\n              <MenuItem value=\"\"><em>Select Class</em></MenuItem>\n              {CLASS_OPTIONS.map((option) => (\n                <MenuItem key={option} value={option}>\n                  {option}th\n                </MenuItem>\n              ))}\n            </Select>\n             {!!error && error.toLowerCase().includes(\"class\") && <Typography color=\"error\" variant=\"caption\">{error}</Typography>}\n          </FormControl>\n\n          {error && (!error.toLowerCase().includes(\"class\") && !error.toLowerCase().includes(\"address\")) && <Alert severity=\"error\" sx={{ mt: 2 }}>{error}</Alert>}\n          {successMessage && <Alert severity=\"success\" sx={{ mt: 2 }}>{successMessage}</Alert>}\n        </Box>\n      </DialogContent>\n      <DialogActions sx={{ p: '16px 24px', justifyContent: 'space-between' }}>\n        <Button onClick={handleClose} sx={{ color: theme.palette.text.secondary }}>Cancel</Button>\n        <Button\n          onClick={handleSubmit}\n          variant=\"contained\"\n          disabled={isSubmitting}\n          sx={{\n            backgroundColor: ACCENT_COLOR,\n            color: theme.palette.getContrastText(ACCENT_COLOR),\n            '&:hover': { backgroundColor: darken(ACCENT_COLOR, 0.15) }\n          }}\n          startIcon={isSubmitting ? <CircularProgress size={20} color=\"inherit\" /> : null}\n        >\n          {isSubmitting ? 'Saving...' : 'Save Changes'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default ChangeDetailsModal;","// src/components/account/UserProfileCard.js\nimport React from 'react';\nimport {\n  Paper, Avatar, Typography, Divider, Stack, Box, Button, CircularProgress, Alert, useTheme\n} from '@mui/material';\nimport { alpha } from '@mui/material/styles';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport EditIcon from '@mui/icons-material/Edit';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport EventNoteIcon from '@mui/icons-material/EventNote';\n\n// Helper to format class (can be moved to utils if used elsewhere)\nconst formatUserClassDisplay = (userClass) => {\n  if (!userClass) return 'N/A';\n  const num = parseInt(userClass);\n  if (isNaN(num)) return userClass;\n  if (num % 10 === 1 && num % 100 !== 11) return `Class ${num}st`;\n  if (num % 10 === 2 && num % 100 !== 12) return `Class ${num}nd`;\n  if (num % 10 === 3 && num % 100 !== 13) return `Class ${num}rd`;\n  return `Class ${num}th`;\n};\n\nfunction UserProfileCard({\n  currentUser,\n  userStats,\n  isLoadingStats,\n  statsError,\n  onEditDetailsClick,\n  onLogoutClick,\n  accentColor\n}) {\n  const theme = useTheme();\n  const effectiveAccentColor = accentColor || theme.palette.primary.main;\n\n  if (!currentUser) return null; // Should not happen if this component is rendered conditionally\n\n  return (\n    <Paper\n      elevation={3}\n      sx={{\n        p: { xs: 1.5, sm: 2.5 },\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: '100%',\n        borderTop: `4px solid ${effectiveAccentColor}`,\n        width: '100%',\n        boxSizing: 'border-box',\n        borderRadius: { xs: 0, sm: theme.shape.borderRadius }\n      }}\n    >\n      <Avatar\n        sx={{\n          width: { xs: 100, sm: 120, md: 160 }, height: { xs: 100, sm: 120, md: 160 },\n          mb: 1.5, bgcolor: effectiveAccentColor,\n          fontSize: { xs: '2.5rem', sm: '3rem', md: '3.5rem' },\n          color: theme.palette.getContrastText(effectiveAccentColor),\n          border: `3px solid ${theme.palette.background.paper}`\n        }}\n        alt={currentUser.name ? currentUser.name.charAt(0).toUpperCase() : ''}\n      >\n        {currentUser.name ? currentUser.name.charAt(0).toUpperCase() : <AccountCircleIcon fontSize=\"inherit\" />}\n      </Avatar>\n      <Typography variant=\"h5\" component=\"h1\" sx={{ fontWeight: 'bold', textAlign: 'center', wordBreak: 'break-word', fontSize: { xs: '1.2rem', sm: '1.4rem', md: '1.6rem' } }}>\n        {currentUser.name}\n      </Typography>\n      <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ textAlign: 'center', mb: 1.5, fontSize: { xs: '0.85rem', sm: '0.95rem' } }}>\n        {formatUserClassDisplay(currentUser.class)}\n      </Typography>\n      <Divider sx={{ width: '90%', my: 1.5 }} />\n      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center', mb: 1.5, px: 1, fontStyle: 'italic', fontSize: { xs: '0.8rem', sm: '0.875rem' } }}>\n        {currentUser.address || \"No address provided.\"}\n      </Typography>\n      <Divider sx={{ width: '90%', my: 1.5 }} />\n      {isLoadingStats ? (\n        <CircularProgress sx={{ my: 1.5, color: effectiveAccentColor }} />\n      ) : statsError ? (\n        <Alert severity=\"error\" sx={{ width: '100%', my: 1, fontSize: '0.8rem' }}>{statsError}</Alert>\n      ) : (\n        <Stack spacing={1} sx={{ width: '100%', alignItems: 'flex-start', px: 1, my: 1 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <AssessmentIcon sx={{ color: theme.palette.text.secondary, mr: 1, fontSize: { xs: '1rem', sm: '1.125rem' } }} />\n            <Typography variant=\"body2\" sx={{ fontSize: { xs: '0.8rem', sm: '0.875rem' } }}>\n              Avg. Score: <Typography component=\"span\" sx={{ fontWeight: 'bold', color: effectiveAccentColor, fontSize: 'inherit' }}>{userStats.overallAveragePercentage}%</Typography>\n            </Typography>\n          </Box>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <EventNoteIcon sx={{ color: theme.palette.text.secondary, mr: 1, fontSize: { xs: '1rem', sm: '1.125rem' } }} />\n            <Typography variant=\"body2\" sx={{ fontSize: { xs: '0.8rem', sm: '0.875rem' } }}>\n              Tests Solved: <Typography component=\"span\" sx={{ fontWeight: 'bold', color: effectiveAccentColor, fontSize: 'inherit' }}>{userStats.totalQuizzesSolved}</Typography>\n            </Typography>\n          </Box>\n        </Stack>\n      )}\n      <Button\n        fullWidth\n        variant=\"outlined\"\n        startIcon={<EditIcon />}\n        onClick={onEditDetailsClick}\n        sx={{ mt: 2, borderColor: effectiveAccentColor, color: effectiveAccentColor, '&:hover': { backgroundColor: alpha(effectiveAccentColor, 0.08) }, fontSize: { xs: '0.8rem', sm: '0.875rem' } }}\n      >\n        Edit Profile Details\n      </Button>\n      <Button\n        fullWidth\n        variant=\"text\"\n        onClick={onLogoutClick}\n        startIcon={<LogoutIcon />}\n        sx={{ mt: 1, color: theme.palette.error.light, fontSize: { xs: '0.8rem', sm: '0.875rem' } }}\n      >\n        Logout\n      </Button>\n    </Paper>\n  );\n}\n\nexport default UserProfileCard;","// src/components/account/AccountManagementActions.js\nimport React from 'react';\nimport { Paper, Typography, Grid, Button, useTheme } from '@mui/material';\nimport { darken } from '@mui/material/styles';\nimport VpnKeyIcon from '@mui/icons-material/VpnKey';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport GroupIcon from '@mui/icons-material/Group';\nimport SportsKabaddiIcon from '@mui/icons-material/SportsKabaddi';\nimport { useNavigate } from 'react-router-dom';\n\nfunction AccountManagementActions({\n  onOpenChangePasswordModal,\n  onOpenChangeDetailsModal,\n  accentColor // Main accent for some buttons\n}) {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const effectiveAccentColor = accentColor || theme.palette.primary.main;\n\n  return (\n    <Paper\n      elevation={3}\n      sx={{\n        p: { xs: 1.5, sm: 2.5 },\n        borderTop: `3px solid ${theme.palette.primary.main}`, // Or a different accent\n        width: '100%',\n        boxSizing: 'border-box',\n        borderRadius: { xs: 0, sm: theme.shape.borderRadius }\n      }}\n    >\n      <Typography variant=\"h6\" gutterBottom sx={{ color: theme.palette.text.secondary, fontWeight: 'medium', fontSize: { xs: '1rem', sm: '1.125rem' } }}>\n        Account Management\n      </Typography>\n      <Grid container spacing={1.5}>\n        <Grid item xs={12} sm={6}>\n          <Button fullWidth variant=\"contained\" startIcon={<VpnKeyIcon />} onClick={onOpenChangePasswordModal} sx={{ backgroundColor: effectiveAccentColor, '&:hover': { backgroundColor: darken(effectiveAccentColor, 0.2) }, fontSize: { xs: '0.8rem', sm: '0.875rem' } }}>\n            Change Password\n          </Button>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button fullWidth variant=\"contained\" startIcon={<SettingsIcon />} onClick={onOpenChangeDetailsModal} sx={{ backgroundColor: effectiveAccentColor, '&:hover': { backgroundColor: darken(effectiveAccentColor, 0.2) }, fontSize: { xs: '0.8rem', sm: '0.875rem' } }}>\n            Change Profile Details\n          </Button>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button fullWidth variant=\"contained\" startIcon={<GroupIcon />} onClick={() => navigate('/friends')} sx={{ backgroundColor: theme.palette.friendsAccent?.main, color: theme.palette.getContrastText(theme.palette.friendsAccent?.main), '&:hover': { backgroundColor: darken(theme.palette.friendsAccent?.main, 0.2) }, fontSize: { xs: '0.8rem', sm: '0.875rem' } }}>\n            Manage Friends\n          </Button>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button fullWidth variant=\"contained\" startIcon={<SportsKabaddiIcon />} onClick={() => navigate('/challenges')} sx={{ backgroundColor: theme.palette.challengesAccent?.main, color: theme.palette.getContrastText(theme.palette.challengesAccent?.main), '&:hover': { backgroundColor: darken(theme.palette.challengesAccent?.main, 0.2) }, fontSize: { xs: '0.8rem', sm: '0.875rem' } }}>\n            My Challenges\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default AccountManagementActions;","// src/components/UserActivityChart.js\nimport React, { useMemo, useRef, useEffect, useState } from 'react';\nimport { Box, Typography, Tooltip, useTheme, alpha } from '@mui/material';\nimport { format, startOfWeek, addDays, getMonth, getDay, parseISO, isSameDay } from 'date-fns'; // Added isSameDay\nimport useMediaQuery from '@mui/material/useMediaQuery'; // For more robust breakpoint detection\n\nconst DAYS_OF_WEEK_LABELS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']; // Full labels\nconst DAY_LABELS_TO_DISPLAY_SHORT = ['Mon', 'Wed', 'Fri']; // Shortened for display\n\n// Define square sizes and gaps as constants for easier adjustment\nconst SQUARE_SIZE_XS = 11;\nconst SQUARE_SIZE_SM_UP = 13;\nconst SQUARE_MARGIN = 1.5; // Margin on each side, so visual gap is SQUARE_MARGIN * 2\nconst MONTH_LABEL_HEIGHT = 20; // px\nconst DAY_LABEL_WIDTH = 25; // px, approximate width for the column of day labels\n\nconst getColorForCount = (count, theme, accentColorInput) => {\n  const baseColor = accentColorInput || theme.palette.primary.main;\n  if (count === 0) return alpha(theme.palette.text.disabled, 0.20); // Slightly more visible for no activity\n  if (count <= 2) return alpha(baseColor, 0.35);\n  if (count <= 4) return alpha(baseColor, 0.60); // Adjusted threshold\n  if (count <= 7) return alpha(baseColor, 0.85); // Adjusted threshold\n  return baseColor; // Full accent for 8+\n};\n\nfunction UserActivityChart({ activityData, accentColor }) {\n  const theme = useTheme();\n  const chartContainerRef = useRef(null); // Ref for the main chart container (excluding day labels)\n  const [visibleWeeksCount, setVisibleWeeksCount] = useState(53); // Default to a full year\n\n  // Use MUI's useMediaQuery for more reliable breakpoint detection\n  const isXsScreen = useMediaQuery(theme.breakpoints.down('sm')); // Treat xs and sm similarly for square size\n\n  // Calculate the full year's chart data (53 weeks)\n  const fullYearChartData = useMemo(() => {\n    const activityMap = new Map();\n    (activityData || []).forEach(item => {\n      if (item.date && typeof item.date === 'string') { // Ensure item.date exists\n        activityMap.set(item.date, item.count); // Assuming item.date is 'YYYY-MM-DD'\n      }\n    });\n\n    const weeks = [];\n    const today = new Date();\n    // Start from Sunday of (53 - 1) weeks ago to ensure 'today' is in the last column\n    let currentColumnStartDate = startOfWeek(addDays(today, -(53 - 1) * 7), { weekStartsOn: 0 });\n\n    for (let w = 0; w < 53; w++) {\n      const weekDays = [];\n      let showMonthLabel = false;\n\n      for (let d = 0; d < 7; d++) {\n        const dayDate = addDays(currentColumnStartDate, d);\n        const dateString = format(dayDate, 'yyyy-MM-dd');\n        const count = activityMap.get(dateString) || 0;\n\n        // Determine if this day is the first of a new month within its column\n        if (d === 0 || getDay(dayDate) === 0 /* Sunday */) { // Check for month label at start of week\n            if (w === 0 || getMonth(dayDate) !== getMonth(addDays(dayDate, -7))) {\n                 // Show month label if it's the first week or the month changes from the previous week's start\n                 showMonthLabel = true;\n            }\n        } else if (isSameDay(dayDate, startOfWeek(dayDate, {weekStartsOn:0})) && getMonth(dayDate) !== getMonth(addDays(dayDate, -1))) {\n            // Alternative check: if it's the first day of the week AND the month is different from the day before.\n            // This might be redundant with the above check.\n        }\n\n\n        weekDays.push({\n          date: dayDate,\n          count: count,\n          color: getColorForCount(count, theme, accentColor),\n          dateString: dateString,\n        });\n      }\n      weeks.push({\n        id: `week-${w}`,\n        days: weekDays,\n        // Show month label for the first day of the week if it's the first day of a month,\n        // or if it's the very first week being displayed.\n        monthLabel: (getDay(weekDays[0].date) === 0 && weekDays[0].date.getDate() <= 7) || w === 0 || showMonthLabel\n                      ? format(weekDays[0].date, 'MMM')\n                      : null,\n      });\n      currentColumnStartDate = addDays(currentColumnStartDate, 7);\n    }\n    return weeks;\n  }, [activityData, theme, accentColor]);\n\n  // Effect to calculate how many weeks can fit without scrolling\n  useEffect(() => {\n    const calculateVisibleWeeks = () => {\n      if (chartContainerRef.current) {\n        const containerWidth = chartContainerRef.current.offsetWidth;\n        const squareSize = isXsScreen ? SQUARE_SIZE_XS : SQUARE_SIZE_SM_UP;\n        const squareTotalWidth = squareSize + (SQUARE_MARGIN * 2); // Square + its horizontal margins\n\n        if (squareTotalWidth > 0) {\n          const numWeeksThatFit = Math.floor(containerWidth / squareTotalWidth);\n          setVisibleWeeksCount(Math.max(5, Math.min(numWeeksThatFit, 53))); // Show at least 5 weeks, max 53\n        } else {\n          setVisibleWeeksCount(isXsScreen ? 20 : 53); // Fallback\n        }\n      } else {\n        // Fallback if ref not available yet (e.g., during SSR or initial very fast render)\n        setVisibleWeeksCount(isXsScreen ? 20 : 53);\n      }\n    };\n\n    calculateVisibleWeeks(); // Initial calculation\n    const debouncedCalculate = setTimeout(calculateVisibleWeeks, 100); // Recalculate shortly after mount for accurate width\n\n    window.addEventListener('resize', calculateVisibleWeeks);\n    return () => {\n      clearTimeout(debouncedCalculate);\n      window.removeEventListener('resize', calculateVisibleWeeks);\n    };\n  }, [isXsScreen, theme.breakpoints.values.sm]); // Re-calculate if breakpoint changes\n\n  // Slice the full year data to display only the visible weeks (most recent ones)\n  const chartDataToRender = useMemo(() => {\n    return fullYearChartData.slice(-visibleWeeksCount);\n  }, [fullYearChartData, visibleWeeksCount]);\n\n\n  if (!activityData) {\n    return <Typography color=\"text.secondary\" sx={{ textAlign: 'center', py: 2 }}>Loading activity data...</Typography>;\n  }\n  if (activityData.length === 0 && fullYearChartData.every(week => week.days.every(day => day.count === 0))) {\n      // This case is handled by the parent AccountPage now.\n      // return <Typography color=\"text.secondary\" sx={{ textAlign: 'center', py: 2 }}>No quiz activity recorded yet.</Typography>;\n  }\n\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start', width: '100%', overflow: 'hidden' }}>\n      {/* Day Labels Column */}\n      <Box sx={{ display: 'flex', flexDirection: 'column', mr: 0.5, pt: `${MONTH_LABEL_HEIGHT}px`, width: `${DAY_LABEL_WIDTH}px`, flexShrink: 0 }}>\n        {DAYS_OF_WEEK_LABELS.map((day, index) => (\n          <Typography\n            key={day}\n            variant=\"caption\"\n            sx={{\n              height: (isXsScreen ? SQUARE_SIZE_XS : SQUARE_SIZE_SM_UP) + (SQUARE_MARGIN * 2) -1, // Approximate height of a square + margins\n              display: 'flex',\n              alignItems: 'center',\n              visibility: DAY_LABELS_TO_DISPLAY_SHORT.includes(day) ? 'visible' : 'hidden',\n              fontSize: '0.6rem',\n              lineHeight: 1,\n              color: theme.palette.text.secondary,\n            }}\n          >\n            {DAY_LABELS_TO_DISPLAY_SHORT.includes(day) ? day.charAt(0) : ''}\n          </Typography>\n        ))}\n      </Box>\n\n      {/* Activity Grid - This box will contain the visible weeks */}\n      <Box ref={chartContainerRef} sx={{ display: 'flex', flexDirection: 'row', gap: `${SQUARE_MARGIN * 2}px`, width: '100%', overflow: 'hidden' }}>\n        {chartDataToRender.map((week) => (\n          <Box key={week.id} sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            {/* Month Label */}\n            <Typography\n              variant=\"caption\"\n              sx={{\n                height: `${MONTH_LABEL_HEIGHT}px`,\n                fontSize: '0.65rem',\n                color: theme.palette.text.secondary,\n                // Month label visibility based on the first day of the *rendered* week\n                visibility: week.days[0].date.getDate() <= 7 || week.id === chartDataToRender[0]?.id ? 'visible' : 'hidden',\n                minWidth: (isXsScreen ? SQUARE_SIZE_XS : SQUARE_SIZE_SM_UP), // Ensure it takes at least square width\n                textAlign: 'left',\n                whiteSpace: 'nowrap',\n                // Position it slightly to align better if needed\n              }}\n            >\n              { (week.days[0].date.getDate() <= 7 || week.id === chartDataToRender[0]?.id) ? format(week.days[0].date, 'MMM') : ''}\n            </Typography>\n            {/* Day Squares */}\n            {week.days.map((day) => (\n              <Tooltip\n                key={day.dateString}\n                title={day.date > new Date() ? 'Future date' : `${day.count} quiz${day.count === 1 ? '' : 'zes'} on ${format(parseISO(day.dateString), 'MMM d, yyyy')}`}\n                arrow\n                placement=\"top\"\n              >\n                <Box\n                  sx={{\n                    width: (isXsScreen ? SQUARE_SIZE_XS : SQUARE_SIZE_SM_UP),\n                    height: (isXsScreen ? SQUARE_SIZE_XS : SQUARE_SIZE_SM_UP),\n                    backgroundColor: day.date > new Date() ? alpha(theme.palette.action.disabledBackground, 0.3) : day.color,\n                    borderRadius: '3px', // Slightly more rounded\n                    // margin: `${SQUARE_MARGIN}px`, // This was creating double margin with gap on parent\n                    cursor: day.date <= new Date() && day.count > 0 ? 'pointer' : 'default',\n                    '&:hover': {\n                      outline: day.date <= new Date() && day.count > 0 ? `1.5px solid ${alpha(theme.palette.getContrastText(day.color), 0.7)}` : 'none',\n                    },\n                  }}\n                />\n              </Tooltip>\n            ))}\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n}\n\nexport default UserActivityChart;","// src/pages/AccountPage.js\nimport { Box, Paper, Grid, CircularProgress, Alert, useTheme, Typography, Stack } from '@mui/material';\nimport { alpha } from '@mui/material/styles';\n\nimport { useAuth } from '../contexts/AuthContext';\nimport { useAccount } from '../hooks/useAccount'; // <-- Import our new hook\n\n// Import Presentational Components\nimport ChangeDetailsModal from '../components/auth/ChangeDetailsModal';\nimport UserProfileCard from '../components/account/UserProfileCard';\nimport AccountManagementActions from '../components/account/AccountManagementActions';\nimport UserActivityChart from '../components/account/UserActivityChart';\nimport BarChartIcon from '@mui/icons-material/BarChart';\n\nfunction AccountPage({ onOpenChangePasswordModal }) {\n  const theme = useTheme();\n  const { currentUser, logout, updateCurrentUserDetails } = useAuth(); // Get user and actions from AuthContext\n  const ACCENT_COLOR = theme.palette.accountAccent?.main || theme.palette.primary.main;\n\n  // Use the custom hook to get all state and logic for this page\n  const {\n    userStats,\n    isLoadingStats,\n    statsError,\n    changeDetailsModalOpen,\n    handleOpenChangeDetailsModal,\n    handleCloseChangeDetailsModal,\n  } = useAccount();\n\n  // The main AccountPage component is now only responsible for rendering the UI.\n  // It should not contain any direct data fetching or complex state logic.\n\n  if (!currentUser) {\n    // This case is primarily handled by ProtectedRoute, but as a fallback:\n    return (\n      <Box sx={{ p: 3, textAlign: 'center' }}>\n        <CircularProgress />\n        <Typography>Loading user...</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <Box sx={{\n        width: '100%',\n        p: { xs: 1, sm: 1, md: 2, lg: 3 },\n        backgroundColor: theme.palette.background.default,\n        margin: '0 auto'\n      }}>\n        <Grid container>\n          {/* === Left Column (Profile Info Card) === */}\n          <Grid item sx={{\n            width: { xs: '100%', sm: '100%', md: '24.5%', lg: '24.5%', xl: '24.5%' },\n            marginLeft: { xs: '0%', sm: '0%', md: '0%', lg: '2%', xl: '2%' },\n            paddingRight: { md: '1%', lg: '1%', xl: '1%' },\n            marginBottom: { xs: 2, sm: 2, md: 0 }\n          }}>\n            <UserProfileCard\n              currentUser={currentUser}\n              userStats={userStats}\n              isLoadingStats={isLoadingStats}\n              statsError={statsError}\n              onEditDetailsClick={handleOpenChangeDetailsModal}\n              onLogoutClick={logout}\n              accentColor={ACCENT_COLOR}\n            />\n          </Grid>\n\n          {/* === Right Column (Account Management & Quiz Activity) === */}\n          <Grid item sx={{\n            width: { xs: '100%', sm: '100%', md: '74.5%', lg: '72.5%', xl: '72.5%' },\n          }}>\n            <Stack spacing={{ xs: 2, md: 3 }} width={'100%'}>\n              <AccountManagementActions\n                onOpenChangePasswordModal={onOpenChangePasswordModal}\n                onOpenChangeDetailsModal={handleOpenChangeDetailsModal}\n                accentColor={ACCENT_COLOR}\n              />\n              <Paper elevation={3} sx={{ p: { xs: 1.5, sm: 2, md: 3 }, borderTop: `3px solid ${theme.palette.info.main}`, width: '100%', boxSizing: 'border-box', borderRadius: { xs: 0, sm: theme.shape.borderRadius } }}>\n                <Typography variant=\"h6\" gutterBottom sx={{ color: theme.palette.text.secondary, fontWeight: 'medium', display: 'flex', alignItems: 'center', fontSize: { xs: '1rem', sm: '1.125rem' } }}>\n                  <BarChartIcon sx={{ mr: 1, color: theme.palette.info.light }} /> Quiz Activity (Last Year)\n                </Typography>\n                {isLoadingStats ? (\n                  <Box sx={{ height: 200, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                    <CircularProgress sx={{ color: theme.palette.info.main }} />\n                  </Box>\n                ) : statsError ? (\n                  <Alert severity=\"warning\" sx={{ mt: 1, fontSize: '0.8rem' }}>{`Could not load activity: ${statsError}`}</Alert>\n                ) : userStats.activityData && userStats.activityData.length > 0 ? (\n                  <UserActivityChart activityData={userStats.activityData} accentColor={ACCENT_COLOR} />\n                ) : (\n                  <Box sx={{ height: 150, display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: alpha(theme.palette.background.default, 0.5), borderRadius: 1 }}>\n                    <Typography color=\"text.secondary\" sx={{ fontSize: '0.875rem' }}>No quiz activity recorded yet.</Typography>\n                  </Box>\n                )}\n              </Paper>\n            </Stack>\n          </Grid>\n        </Grid>\n      </Box>\n\n      {/* The ChangeDetailsModal now gets the user and the update function from the AuthContext */}\n      <ChangeDetailsModal\n        open={changeDetailsModalOpen}\n        onClose={handleCloseChangeDetailsModal}\n        currentUser={currentUser}\n        setCurrentUser={updateCurrentUserDetails}\n      />\n    </>\n  );\n}\n\nexport default AccountPage;","// src/hooks/useAccount.js\nimport { useState, useEffect, useCallback } from 'react';\nimport apiClient from '../api/axiosInstance';\nimport { useAuth } from '../contexts/AuthContext'; // We'll get user details from here\n\n/**\n * A custom hook to manage all state and logic for the logged-in user's Account page.\n * @returns {object} An object containing all the state, derived data, and handlers needed by the AccountPage component.\n */\nexport const useAccount = () => {\n  const { currentUser } = useAuth(); // Get the user from the auth context\n\n  // --- State for ChangeDetailsModal ---\n  const [changeDetailsModalOpen, setChangeDetailsModalOpen] = useState(false);\n\n  // --- State for User Stats ---\n  const [userStats, setUserStats] = useState({\n    totalQuizzesSolved: 0,\n    overallAveragePercentage: 0,\n    activityData: [],\n  });\n  const [isLoadingStats, setIsLoadingStats] = useState(false);\n  const [statsError, setStatsError] = useState('');\n\n  // --- Data Fetching Logic ---\n  const fetchUserAccountStats = useCallback(async () => {\n    // Check for currentUser and token inside the callback\n    if (!currentUser || !currentUser.token) {\n      setUserStats({ totalQuizzesSolved: 0, overallAveragePercentage: 0, activityData: [] });\n      setIsLoadingStats(false);\n      return;\n    }\n    setIsLoadingStats(true);\n    setStatsError('');\n    try {\n      const response = await apiClient.get('/api/users/stats', {\n        headers: { Authorization: `Bearer ${currentUser.token}` }\n      });\n      setUserStats({\n        totalQuizzesSolved: response.data.totalQuizzesSolved || 0,\n        overallAveragePercentage: response.data.overallAveragePercentage || 0,\n        activityData: response.data.activityData || [],\n      });\n    } catch (error) {\n      console.error(\"Error fetching user account stats:\", error);\n      setStatsError(error.response?.data?.message || \"Failed to load your statistics.\");\n      // Reset stats on error to avoid showing stale data\n      setUserStats({ totalQuizzesSolved: 0, overallAveragePercentage: 0, activityData: [] });\n    } finally {\n      setIsLoadingStats(false);\n    }\n  }, [currentUser]); // Dependency is on the currentUser object\n\n  // Effect to trigger data fetching when the user is available\n  useEffect(() => {\n    if (currentUser) {\n      fetchUserAccountStats();\n    } else {\n      // If user logs out, clear the stats\n      setUserStats({ totalQuizzesSolved: 0, overallAveragePercentage: 0, activityData: [] });\n      setStatsError('');\n      setIsLoadingStats(false);\n    }\n  }, [currentUser, fetchUserAccountStats]);\n\n  // --- Modal Handlers ---\n  const handleOpenChangeDetailsModal = () => setChangeDetailsModalOpen(true);\n  const handleCloseChangeDetailsModal = () => setChangeDetailsModalOpen(false);\n\n  // --- Return all state and handlers needed by the component ---\n  return {\n    userStats,\n    isLoadingStats,\n    statsError,\n    changeDetailsModalOpen,\n    handleOpenChangeDetailsModal,\n    handleCloseChangeDetailsModal,\n  };\n};"],"names":["CLASS_OPTIONS","_ref","_theme$palette$accoun","open","onClose","currentUser","setCurrentUser","theme","useTheme","ACCENT_COLOR","palette","accountAccent","main","primary","formData","setFormData","useState","identifier","email","address","class","error","setError","successMessage","setSuccessMessage","isSubmitting","setIsSubmitting","useEffect","name","String","handleInputChange","e","value","target","prev","_objectSpread","handleSubmit","async","event","preventDefault","trim","includes","payload","parseInt","response","apiClient","put","headers","Authorization","concat","token","data","message","user","prevUser","updatedUserForStorage","id","localStorage","setItem","JSON","stringify","setTimeout","err","_err$response","_err$response$data","handleClose","_jsxs","Dialog","PaperProps","sx","minWidth","xs","sm","children","_jsx","DialogTitle","backgroundColor","color","getContrastText","pb","pt","textAlign","Box","display","alignItems","justifyContent","EditNoteIcon","mr","DialogContent","Typography","variant","mb","component","onSubmit","noValidate","mt","TextField","margin","fullWidth","label","disabled","InputLabelProps","shrink","type","required","autoComplete","multiline","rows","onChange","toLowerCase","FormControl","InputLabel","Select","labelId","MenuItem","map","option","Alert","severity","DialogActions","p","Button","onClick","text","secondary","darken","startIcon","CircularProgress","size","formatUserClassDisplay","userClass","num","isNaN","userStats","isLoadingStats","statsError","onEditDetailsClick","onLogoutClick","accentColor","effectiveAccentColor","Paper","elevation","flexDirection","height","borderTop","width","boxSizing","borderRadius","shape","Avatar","md","bgcolor","fontSize","border","background","paper","alt","charAt","toUpperCase","AccountCircleIcon","fontWeight","wordBreak","Divider","my","px","fontStyle","Stack","spacing","AssessmentIcon","overallAveragePercentage","EventNoteIcon","totalQuizzesSolved","EditIcon","borderColor","alpha","LogoutIcon","light","_theme$palette$friend","_theme$palette$friend2","_theme$palette$friend3","_theme$palette$challe","_theme$palette$challe2","_theme$palette$challe3","onOpenChangePasswordModal","onOpenChangeDetailsModal","navigate","useNavigate","gutterBottom","Grid","container","item","VpnKeyIcon","SettingsIcon","GroupIcon","friendsAccent","SportsKabaddiIcon","challengesAccent","DAYS_OF_WEEK_LABELS","DAY_LABELS_TO_DISPLAY_SHORT","getColorForCount","count","accentColorInput","baseColor","activityData","chartContainerRef","useRef","visibleWeeksCount","setVisibleWeeksCount","isXsScreen","useMediaQuery","breakpoints","down","fullYearChartData","useMemo","activityMap","Map","forEach","date","set","weeks","today","Date","currentColumnStartDate","startOfWeek","addDays","weekStartsOn","w","weekDays","showMonthLabel","d","dayDate","dateString","format","get","getDay","getMonth","isSameDay","push","days","monthLabel","getDate","calculateVisibleWeeks","current","containerWidth","offsetWidth","squareTotalWidth","SQUARE_MARGIN","numWeeksThatFit","Math","floor","max","min","debouncedCalculate","window","addEventListener","clearTimeout","removeEventListener","values","chartDataToRender","slice","length","every","week","day","overflow","flexShrink","index","visibility","lineHeight","ref","gap","_chartDataToRender$","_chartDataToRender$2","whiteSpace","Tooltip","title","parseISO","arrow","placement","action","disabledBackground","cursor","outline","py","logout","updateCurrentUserDetails","useAuth","changeDetailsModalOpen","handleOpenChangeDetailsModal","handleCloseChangeDetailsModal","useAccount","setChangeDetailsModalOpen","setUserStats","setIsLoadingStats","setStatsError","fetchUserAccountStats","useCallback","_error$response","_error$response$data","console","_Fragment","lg","default","xl","marginLeft","paddingRight","marginBottom","UserProfileCard","AccountManagementActions","info","BarChartIcon","UserActivityChart","ChangeDetailsModal"],"sourceRoot":""}